{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "CommonDataService",
            "id": "injectable-CommonDataService-8ea3398f3f460ac2dea8d916ab7cc581",
            "file": "src/app/common-data.service.ts",
            "properties": [
                {
                    "name": "defaultData",
                    "defaultValue": "{\ncoversData: {cover: \"\"},\ninstallmentsData: {term: \"\"},\ninsuringPartyData: {egn: \"\", address: \"mumbai\", email: \"\"},\npolicyDetailsData: {policyDate: \"\", policyLength: \"\", check1: false, check2: false},\nvehicleData: {registrationNumber: \"\", certificateNumber: \"\", purpose: \"\", yesNo: \"\"},\n}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "defaultData2",
                    "defaultValue": "{\n  contactInformation: {\n    No: \"\",\nappartment: \"\",\nblock: \"\",\ncity: \"\",\nentrance: \"\",\nphone: \"\",\npincode: \"\",\nstreet: \"\",\n  },\ndeliveryInformation:{\nappt: \"\",\nblock: \"\",\nbusiness: \"\",\ncity: \"\",\ncontact: null,\nentrance: \"\",\nfullName: \"\",\nnotes: \"\",\nnumber: \"\",\npincode: \"\",\nstreet: \"\",\n},\npersonalInformation:{\nbirth: \"\",\ncitizen: \"\",\nfullname: {firstname: \"\", lastname: \"\", surname: \"\"},\nfullnameeng: {firstnameeng: \"\", lastnameeng: \"\", surnameeng: \"\"},\nlnch: \"\"},\n\nvehicleOwnerInformation: {fullname: {firstname: \"\", lastname: \"\", surname: \"\"},\nlnch: \"\"}\n}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "formData",
                    "defaultValue": "new BehaviorSubject<any>(this.defaultData)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "policyData",
                    "defaultValue": "new BehaviorSubject<any>(this.defaultData2)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonDataService {\ndefaultData={\ncoversData: {cover: \"\"},\ninstallmentsData: {term: \"\"},\ninsuringPartyData: {egn: \"\", address: \"mumbai\", email: \"\"},\npolicyDetailsData: {policyDate: \"\", policyLength: \"\", check1: false, check2: false},\nvehicleData: {registrationNumber: \"\", certificateNumber: \"\", purpose: \"\", yesNo: \"\"},\n}\ndefaultData2={\n  contactInformation: {\n    No: \"\",\nappartment: \"\",\nblock: \"\",\ncity: \"\",\nentrance: \"\",\nphone: \"\",\npincode: \"\",\nstreet: \"\",\n  },\ndeliveryInformation:{\nappt: \"\",\nblock: \"\",\nbusiness: \"\",\ncity: \"\",\ncontact: null,\nentrance: \"\",\nfullName: \"\",\nnotes: \"\",\nnumber: \"\",\npincode: \"\",\nstreet: \"\",\n},\npersonalInformation:{\nbirth: \"\",\ncitizen: \"\",\nfullname: {firstname: \"\", lastname: \"\", surname: \"\"},\nfullnameeng: {firstnameeng: \"\", lastnameeng: \"\", surnameeng: \"\"},\nlnch: \"\"},\n\nvehicleOwnerInformation: {fullname: {firstname: \"\", lastname: \"\", surname: \"\"},\nlnch: \"\"}\n}\n  constructor() { }\n  formData=new BehaviorSubject<any>(this.defaultData);\n  policyData=new BehaviorSubject<any>(this.defaultData2);\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 48
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AdditionalCoversComponent",
            "id": "component-AdditionalCoversComponent-afc6da0240f2b8ded62485413f9e32b4",
            "file": "src/app/components/additional-covers/additional-covers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-additional-covers",
            "styleUrls": [
                "./additional-covers.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./additional-covers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "NextTab",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "additionalcoverForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "\"./assets/carlogo.jpeg \"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "next",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "tickimage",
                    "defaultValue": "\"./assets/tick.jpg\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-additional-covers',\n  templateUrl: './additional-covers.component.html',\n  styleUrls: ['./additional-covers.component.css']\n})\nexport class AdditionalCoversComponent implements OnInit {\n  @Output() OnRegister = new EventEmitter()\n  @Output() OnToggle = new EventEmitter()\n  @Output() NextTab = new EventEmitter()\n  imageUrl=\"./assets/carlogo.jpeg \";;\n  tickimage=\"./assets/tick.jpg\";\n  additionalcoverForm: FormGroup;\n\n  constructor( private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.additionalcoverForm = this.formBuilder.group({\n      cover: ['', Validators.required],\n    });\n }\n  \n  change=()=>{\n    if(this.additionalcoverForm.valid){\n      this.OnToggle.emit(true);\n      this.OnRegister.emit(this.additionalcoverForm.value);\n    }else{\n      this.OnToggle.emit(false)\n    }\n  }\n  next=()=>{\n    console.log(this.additionalcoverForm.value, \"additional covers\");\n    this.OnRegister.emit(this.additionalcoverForm.value);\n    this.NextTab.emit(1)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\n   \n    padding-top: 50px;\n    width: 2000px;\n   \n      \n}\n.heading{\n    text-align: left;\n    margin-left:20px ;\n    color: rgbrgb(8, 56, 95); \n    font-family:   'Ubuntu', Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif ;\n \n}\n\n.thirdparty{\n    background-color: rgb(8, 56, 95); \n    height:130px;\n    width:2000px;\n}\n.policy {\n    color:white;\n    margin-left:-1px ;\n    margin-top: -50px;\n    font-size: 20px;\n   \n}\n.bgn  {\n\nmargin-top: -1px;\n\ncolor:white;\nfont-size: 20px;\n\n}\n\n/* 'Times New Roman',Lucida Grande , Arial, Tahomasans-serifTrebuchet MS' */\n\n.firstcard{\n   width:2000px;\n    height:90px;\n    margin-left: 25px;\n    margin-right: 25px;\n    margin-top: -30px;\n    \n    }\n.card-body{\n    padding-top: 2px;\n}    \n.discription{\n        color:rgb(8, 56, 95);\n        padding-left: 15px;\n        margin-top: -5px;\n}\n.secondcard{\n       \n    width:2000px;\n    height:110px;\n    margin-left: 25px;\n    margin-right: 25px;\n    margin-top: -30px;\n    \n        }\n\n.valuebutton{\n            width:80px;\n           height:20px;\n           padding-top: 1px;\n}\n.afterpremium{\n    padding-left: 15px;\n    margin-top: -5px;\n}\n.afterpremium span{\n\n    color:rgb(8, 56, 95);\n}\n.bgnpremium {\n    margin-right: -180px;\n    margin-top: -1px;\n    text-align: right;\n    color:rgb(8, 56, 95);\n    font-size: 20px;\n    \n}\n .thirdcard{\n           \n            width:2000px;\n            height:550px;\n            margin-left: 25px;\n            margin-right: 25px;\n            margin-top: -30px;\n }\n .textcolor{\n    \n    color:rgb(8, 56, 95);\n    margin-top: -20px;\n    padding-left: 15px;\n    \n}\n\n .nextbutton{\n    border-radius: 24px;\n    height:30px;\n    width:120px;\n    margin-left: 25px;\n    margin-top: -30px;\n   \n }\n \n .overflowAuto {\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n .car{\n     margin-left:-5px;\n }",
                    "styleUrl": "./additional-covers.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container col-auto col-lg-8 col-md-10 \">\n    <h1 class=\"heading \"><b>Additional covers</b></h1><br>\n    <form [formGroup]=\"additionalcoverForm\" (submit)=\"next()\">\n        <div class=\"row \">\n            <div class=\"card shadow p-3 mb-5 rounded thirdparty\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                         <div class=\" col-md-4 col-0 col-7 car\">\n                            <img  width=\"60px\" height=\"60px\" src=\"../../assets/motor_policy.PNG\"></div>\n                        <div class=\" col-lg-9 col-md-10 col-9 pr-0  m-auto\">\n                            <div class=\"row policy\" style=\"color:white ;\">\n                                <div class=\"col-md-8 col-12 off-set-0 \" >\n                                    <span class=\"middle-heading\">Motor Third party Liability Policy</span>\n                                </div>\n                                <div class=\" col-auto col-md-4 col-12 bgn\">\n                                    <div>\n                                        <div><strong>324,00BGN</strong></div>\n                                        <h6>Four payments</h6>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n                \n                        <!-- <div class=\"col-lg-7 col-md-8 col-4 col-7 policy\">\n                         <span>Motor Third Party Liability Policy</span></div>\n                        \n                        <div class=\"col-lg-5 col-md-4 col-auto col-5 bgn \">\n                            382,00BGN<br>\n                            <h6>Four payments</h6>\n                        </div> -->\n                   \n        <div class=\"row\">\n            <div class=\"card shadow p-3 mb-5 bg-white rounded firstcard overflowAuto h-100\">\n                <div class=\"card-body \">\n                    <label><input type=\"radio\" formControlName=\"cover\" value=\"none\" name=\"cover\" (change)=\"change()\">\n                        <b> None</b></label>\n                    <div class=\" discription\">Description of additional cover here</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"card shadow p-3 mb-5 bg-white rounded secondcard overflowAuto h-100\">\n                <div class=\"card-body\">\n                    <div class=\"row \">\n                        <div class=\"col-lg-7 col-md-8 col-auto col-7\">\n                            <label><input type=\"radio\" formControlName=\"cover\" value=\"premium\" name=\"cover\"\n                                    (change)=\"change()\">\n                                <b> Premium</b></label>\n                            <div class=\"afterpremium\">\n                                <button class=\"btn btn-success valuebutton\">\n                                    <h6>Best Value</h6>\n                                </button>\n                                <span> Description of additional cover here</span>\n                                <br><a href=\"www.google.com\"><u>See what's more</u></a>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-5 col-md-4 col-auto col-5 bgnpremium\">\n                            +25,00BGN<br>\n                            <h5>for 12 months</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"card shadow p-3 mb-5 bg-white rounded thirdcard overflowAuto h-100\">\n                <div class=\"card-body \">\n                    <div class=\"row\">\n                        <div class=\" col-lg-7 col-md-8 col-auto col-7\">\n                            <label><input type=\"radio\" formControlName=\"cover\" value=\"vip\" name=\"cover\"\n                                    (change)=\"change()\">\n                                <b> VIP</b></label>\n                            <div class=\" discription\">Description of additional cover here</div><br><br>\n                        </div>\n                        <div class=\" col-lg-5 col-md-4 col-auto col-5 bgnpremium\">\n                            +80,00BGN<br>\n                            <h5>for 12 months</h5>\n\n                        </div>\n                    </div>\n                    <div class=\"textcolor\">\n                        <p><b>Services provded under the \"PREMIUM\" clause, but with higher\n                                limits when transporting vehicles</b></p>\n\n                        <div class=\"form-row\">\n                            <div class=\"col-0 image\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\n                            <span class=\"col-10\"> In case of an insurance event(no limit in the number of transports\n                                and up to 900 km\n                                mileage)</span>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-0 off-set-0\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\n                            <span class=\"col-10 wid\">Technical failure(no mileage limit and up to 2 transports)\n                            </span><br>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-0 off-set-0\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\n                            <span class=\"col-10 wid\">Wrong fuet(disposable)\n                            </span><br>\n                        </div><br>\n\n                        <p><b>And more:</b></p>\n                        <div class=\"form-row\">\n                            <div class=\"col-0 off-set-0\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\">\n                            </div>\n                            <span class=\"col-10 wid\">\n                                Stay in the parking lot of the damaged car </span><br>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-0 off-set-0\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\">\n                            </div>\n                            <span class=\"col-10 wid\">Overview in a hotel of the driver of the vehicle </span><br>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-0 off-set-0\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\n                            <span class=\"col-10 wid\">Transportation of persons traveling in vehicles, in case the\n                                vehicle\n                                has suffered damage\n                            </span><br>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-0 off-set-0\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\n                            <span class=\"col-10 wid\">Medical transportation in case of an accident</span><br>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-0 off-set-0\">\n                                <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\n                            <span class=\"col-10 wid\">Costs of examinations, medical examinations and manipulations in\n                                case of bodily\n                                injuries to the driver and / or persons traveling in the vehicle as a result of the\n                                accident</span><br> \n                            </div>\n                            <div class=\"form-row\">\n                                <div class=\"col-0 off-set-0\">\n                                    <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\">\n                                </div>\n                                <span class=\"col-10 wid\">In case of damages covered by Casco + insurance - up to 2\n                                    vehicle inspections at\n                                    the address indicated by the client</span><br>\n                            </div>\n                            <br><a href=\"www.google.com\"><u>Hide what's included</u></a>\n                        </div>  \n                    </div>\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary nextbutton\" [disabled]=\"!additionalcoverForm.valid\"\n                matStepperNext>\n                Next</button>\n    </form>\n\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c0988493ddb9bacc036c3d465b1411de",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'stepperForm'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'stepperForm';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n<!-- <app-delivery></app-delivery> -->\n\n"
        },
        {
            "name": "ContactComponent",
            "id": "component-ContactComponent-36b1f2780fe024f9260f0c35f33822c2",
            "file": "src/app/components/contact/contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contact",
            "styleUrls": [
                "./contact.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./contact.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "registerForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  @Output() OnRegister = new EventEmitter()\n  @Output() OnToggle = new EventEmitter()\n  registerForm: FormGroup;\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      city: ['', Validators.required],\n      pincode: ['', Validators.required],\n      street: ['', Validators.required],\n      No: ['', Validators.required],\n      block:[''],\n      entrance:[''],\n      appartment:[''],\n      phone:['',[Validators.required,Validators.pattern(\"[0-9]{10}\")]]\n    });\n  }\n  submit=()=>{\n    console.log(this.registerForm.value, \"policy details\");\n    this.OnRegister.emit(this.registerForm.value);\n  }\n  change=()=>{\n    if(this.registerForm.valid){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(this.registerForm.value);\n    }else{\n      this.OnToggle.emit(false)\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Style inputs with type=\"text\", select elements and textareas */\n.container{\n    margin: 100px;\n}\n\ninput[type=text], select, textarea {\n    /* Full width */\n    padding: 12px; /* Some padding */ \n    border: 1px solid #ccc; /* Gray border */\n    border-radius: 8px; /* Rounded borders */\n    box-sizing: border-box; /* Make sure that padding and width stays in place */\n    margin-top: 6px; /* Add a top margin */\n    margin-bottom: 16px; /* Bottom margin */\n    resize: vertical /* Allow the user to vertically resize the textarea (not horizontally) */\n  }\n \n  h1{\n    margin-left: 1px;\n    margin-bottom: 20px;\n    color: darkblue;\n}\n  label{\n    color: rgb(163, 160, 160);\n    font-family: Arial, Helvetica, sans-serif;\n}\n  /* Style the submit button with a specific background color etc */\n  input[type=submit] {\n    background-color: rgb(0, 204, 255);\n    color: white;\n    padding: 12px 50px;\n    border: none;\n    border-radius: 20px;\n    cursor: pointer;\n  }\n  .border {\n    border: 1px solid rgba(211, 211, 211, 0.507);\n  }\n  .tab{\n    color: darkblue;\n     font-size: 1;\n  }\n \n  \n \n  \n  \n  ",
                    "styleUrl": "./contact.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n  <h1>Contact Details</h1><br>\n  <form [formGroup]=\"registerForm\" (submit)=\"submit()\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n\n      </div>\n\n      <label for=\"city\">City</label>\n      <select id=\"city\" style=\"margin-left: 17em;\" name=\"city\" class=\"tab\" formControlName=\"city\" (change)=\"change()\">\n        <option value=\"select\">Select</option>\n        <option value=\"SofiaCity\">Sofia City</option>\n        <option value=\"techCity\">Tech City</option>\n        <option value=\"electronicCity\">Electronic City</option>\n      </select>\n\n      <input type=\"text\" id=\"num\" name=\"num\" style=\"margin-left: 7em;\" placeholder=\"Pin Code\" class=\"tab\" size=\"10\" (change)=\"change()\"\n        formControlName=\"pincode\">\n\n    </div>\n    <hr class=\"border\" /><br>\n\n    <label for=\"street\">Street and Number</label>\n    <input type=\"text\" id=\"street\" name=\"streetName\" class=\"tab\" style=\"margin-left: 9em;\" placeholder=\"Street Name\" (change)=\"change()\"\n      formControlName=\"street\">\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <input type=\"text\" id=\"streetNumber\" name=\"streetNumber\" placeholder=\"Street  number\" class=\"tab\" size=\"10\" (change)=\"change()\"\n      formControlName=\"No\"><br>\n    <hr class=\"border\" /><br>\n\n    <label for=\"block\">Block,Entrance and Apartment</label>\n    <input type=\"text\" id=\"block\" class=\"tab\" style=\"margin-left: 3em;\" placeholder=\"Block\" name=\"blockName\" (change)=\"change()\"\n      formControlName=\"block\">\n\n    <label for=\"entranceName\"></label>&nbsp;&nbsp;&nbsp;&nbsp;\n    <input type=\"text\" class=\"tab\" id=\"entranceName\" placeholder=\"Entrance\" name=\"entranceName\" (change)=\"change()\"\n      formControlName=\"entrance\">\n    <label for=\"appartmentName\"></label>&nbsp;&nbsp;&nbsp;&nbsp;\n    <input type=\"text\" class=\"tab\" id=\"appartmentName\" placeholder=\"Appartment\" name=\"appartmentName\" (change)=\"change()\"\n      formControlName=\"appartment\"><br>\n\n    <hr class=\"border\" /><br>\n    <label for=\"phoneNo\">Phone Number</label>\n    <input type=\"text\" class=\"tab\" style=\"margin-left: 11em;\" id=\"phoneNo\" placeholder=\"Phone Number\" (change)=\"change()\"\n      formControlName=\"phone\"><br>\n\n\n\n  </form>\n  <button class=\"btn btn-primary rounded-pill\" type=\"submit\" matStepperNext [disabled]=\"!registerForm.valid\">Next</button>\n</div>"
        },
        {
            "name": "DeliveryComponent",
            "id": "component-DeliveryComponent-100c4b5ae2f94fa4f78cdf672691194f",
            "file": "src/app/components/delivery/delivery.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delivery",
            "styleUrls": [
                "./delivery.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./delivery.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "cities",
                    "defaultValue": "[\"New Delhi\",\"Mumbai\", \"Chennai\", \"Bangalore\", \"Kolkata\", \"Mysore\", \"Pune\", \"Jaipur\"]",
                    "type": "String[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "codes",
                    "defaultValue": "[55, 86, 33, 49, 91]",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "detailsForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "register",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "toggle1",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.css']\n})\nexport class DeliveryComponent implements OnInit {\n  @Output() OnRegister= new EventEmitter()\n  @Output() OnToggle=new EventEmitter()\n\n  detailsForm: FormGroup;\n\n  cities:String[] = [\"New Delhi\",\"Mumbai\", \"Chennai\", \"Bangalore\", \"Kolkata\", \"Mysore\", \"Pune\", \"Jaipur\"];\n\n  codes:number[] = [55, 86, 33, 49, 91];\n\n  submitted:boolean = false;\n\n  change=()=>{\n    if(this.detailsForm.valid){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(this.detailsForm.value);\n    }else{\n      this.OnToggle.emit(false)\n      // this.OnRegister.emit(this.personalForm.value);\n    }\n  }\n  toggle() {\n    this.submitted = true;\n  }\n\n  toggle1() {\n    this.submitted = false;\n  }\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.detailsForm = this.formBuilder.group({\n      fullName: ['', Validators.compose([Validators.required,Validators.minLength(3)])],\n      city: ['New Delhi', Validators.required],\n      pincode: ['', Validators.compose([Validators.required,Validators.maxLength(6)])],\n      street: ['',Validators.compose([Validators.required,Validators.minLength(3)])],\n      number: ['', Validators.required],\n      block: ['', Validators.required],\n      entrance: ['', Validators.required],\n      appt: ['', Validators.required],\n      contact: ['', Validators.compose([Validators.required,Validators.max(9999999999)])],\n      business: ['', Validators.required],\n      notes: ['']\n    });\n  };\n\n  register(){\n    this.OnRegister.emit(this.detailsForm.value);\n  }\n  get formControls(){\n    return this.detailsForm.controls\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n    padding-bottom: 200px;\r\n}\r\n\r\n.display-1 {\r\n    font-size: 45px;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.address {\r\n    font-size: large;\r\n}\r\n\r\n.input-1 {\r\n    padding-left: 10px;\r\n}\r\n\r\n.radio-1 {\r\n    height: 25px;\r\n    width: 25px;\r\n}\r\n\r\n.input-1_radio-1 {\r\n    padding-left: 10px;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.input-1_input-1 {\r\n    padding-left: 36px;\r\n}\r\n\r\n.form-1 {\r\n    padding-left: 15px;\r\n    border-radius: 10px;\r\n    background-color: #F0F8FF;\r\n}\r\n\r\n.form-1_row-1 {\r\n    padding-top: 30px;\r\n}\r\n.form-1_row-2 {\r\n    padding-left: 20px;\r\n    font-size: medium;\r\n}\r\n\r\n.form-1_row-3 {\r\n    color: rgb(12, 44, 70);\r\n    height: 40px;\r\n    font-size: large;\r\n    border-radius: 10px;\r\n}\r\n\r\n.form-1_row-4 {\r\n    padding-right: 15px;\r\n\r\n}\r\n\r\n.form-1_row-5 {\r\n    padding-top: 30px;\r\n    padding-bottom: 30px;\r\n}\r\n\r\n.details {\r\n    font-size: 30px;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.details_row-1 {\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.details_row-2 {\r\n    padding-left: 10px;\r\n    padding-top: 30px;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.details_row-3 {\r\n    font-size: large;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.details_row-4 {\r\n    resize: none;\r\n    border-radius: 10px;\r\n    font-size: medium;\r\n}\r\n\r\n.delivery-1 {\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-top: 20px;\r\n}\r\n\r\n.delivery-1_row-1 {\r\n    border: gainsboro solid 1px;\r\n    border-radius: 10px;\r\n    font-size: large;\r\n}\r\n\r\n.delivery-1_row-2 {\r\n    padding-top: 30px;\r\n    padding-left: 30px;\r\n}\r\n\r\n.btn {\r\n    font-size: large;\r\n    width: 80px;\r\n    border-radius: 15px;\r\n}\r\n",
                    "styleUrl": "./delivery.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formControls": {
                    "name": "formControls",
                    "getSignature": {
                        "name": "formControls",
                        "type": "",
                        "returnType": "",
                        "line": 59
                    }
                }
            },
            "templateData": "<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n    <script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\n    <title>Delivery</title>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Heading -->\n        <div class=\"row\">\n            <div class=\"col-sm-10 col-sm-offset-1\">\n                <h1 class=\"display-1\">Delivery Address</h1>\n            </div>\n        </div><br><br>\n        <!-- Heading -->\n\n        <!-- Form -->\n        <div class=\"row\">\n            <div class=\"col-sm-10 col-sm-offset-1\">\n                <form [formGroup]=\"detailsForm\" (ngSubmit)=\"register()\">\n                    <!-- Form -->\n                    <div>\n                        <div class=\"form-1\">\n                            <div class=\"row form-group form-1_row-1\">\n                                <div class=\"col-sm-4 form-1_row-2\">\n                                    <label>Full Name</label>\n                                </div>\n                                <div class=\"col-sm-6 col-sm-offset-2\">\n                                    <input type=\"text\" formControlName=\"fullName\" class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                    <div class=\"error\" *ngIf=\"formControls.fullName.touched && formControls.fullName.errors\">\n                                        <div *ngIf=\"formControls.fullName.errors.required\">Full Name is required</div>\n                                        <div *ngIf=\"formControls.fullName.errors.minlength\">Full Name should be atleast 3 characters</div>\n                                    </div>\n                                </div>\n                               \n                            </div>\n                            <div class=\"form-1_row-4\"><hr></div>\n                            <div class=\"row form-group form-1_row-1\">\n                                <div class=\"col-sm-4 form-1_row-2\">\n                                    <label>City & Pincode</label>\n                                </div>\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <select name=\"city\" id=\"city\"  formControlName=\"city\" class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                        <option value=\"{{city}}\" *ngFor=\"let city of cities\">{{city}}</option>\n                                    </select>\n                                    <div class=\"error\" *ngIf=\"formControls.city.touched && formControls.city.errors\">\n                                        <div *ngIf=\"formControls.city.errors.required\">City is required</div>\n                                       \n                                    </div>\n                                </div>\n                                \n                                <div class=\"col-sm-2\">\n                                    <input formControlName=\"pincode\" type=\"text\"  class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                    <div class=\"error\" *ngIf=\"formControls.pincode.touched && formControls.pincode.errors\">\n                                        <div *ngIf=\"formControls.pincode.errors.required\">Pincode is required</div>\n                                        <div *ngIf=\"formControls.pincode.errors.maxlength\">Only  6 characters are allowed</div>\n                                       \n                                    </div>\n                                </div>\n                                \n                            </div>\n                            <div class=\"form-1_row-4\"><hr></div>\n                            <div class=\"row form-group form-1_row-1\">\n                                <div class=\"col-sm-4 form-1_row-2\">\n                                    <label>Street & Number</label>\n                                </div>\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <input type=\"text\" formControlName=\"street\" class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                    <div class=\"error\" *ngIf=\"formControls.street.touched && formControls.street.errors\">\n                                        <div *ngIf=\"formControls.street.errors.required\">Street is required</div>\n                                        <div *ngIf=\"formControls.street.errors.minlength\">Street should be atleast 3 characters</div>\n                                       \n                                    </div>\n                                </div>\n                                \n                                <div class=\"col-sm-2\">\n                                    <input type=\"text\" formControlName=\"number\" class=\"form-control form-1_row-3\" (change)=\"change()\"> \n                                    <div class=\"error\" *ngIf=\"formControls.number.touched && formControls.number.errors\">\n                                        <div *ngIf=\"formControls.number.errors.required\">Number is required</div>\n                                                                          \n                                    </div>\n                                </div>\n                                \n                            </div>\n                            <div class=\"form-1_row-4\"><hr></div>\n                            <div class=\"row form-group form-1_row-5\">\n                                <div class=\"col-sm-4 form-1_row-2\">\n                                    <label>Block, Entrance & Appartment</label>\n                                </div>\n                                <div class=\"col-sm-2 col-sm-offset-1\">\n                                    <input type=\"text\" formControlName=\"block\" class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                    <div class=\"error\" *ngIf=\"formControls.block.touched && formControls.block.errors\">\n                                        <div *ngIf=\"formControls.block.errors.required\">Block is required</div>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"col-sm-2\">\n                                    <input type=\"text\" formControlName=\"entrance\" class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                    <div class=\"error\" *ngIf=\"formControls.entrance.touched && formControls.entrance.errors\">\n                                        <div *ngIf=\"formControls.entrance.errors.required\">Entrance is required</div>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"col-sm-2\">\n                                    <input type=\"text\" formControlName=\"appt\" class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                    <div class=\"error\" *ngIf=\"formControls.appt.touched && formControls.appt.errors\">\n                                        <div *ngIf=\"formControls.appt.errors.required\">Appartment is required</div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div><br>\n                        <!-- Form -->\n                        <!-- Additional Details -->\n                        <h1 class=\"display-1 details\">Additonal Details</h1>\n                        <br><br>\n                        <div class=\"row form-group details_row-1\">\n                            <div class=\"col-sm-4\" style=\"font-size: medium;\">\n                                Contact Number\n                            </div>\n                            <div class=\"col-sm-5 col-sm-offset-3\">\n                                <input type=\"number\" formControlName=\"contact\" class=\"form-control form-1_row-3\" (change)=\"change()\">\n                                <div class=\"error\" *ngIf=\"formControls.contact.touched && formControls.contact.errors\">\n                                    <div *ngIf=\"formControls.contact.errors.required\">Contact Number is required</div>\n                                    <div *ngIf=\"formControls.contact.errors.max\">Maximum 10 charaters  are allowed</div>\n                                </div>\n                            </div>\n                            \n                        </div>\n                        <hr>\n                        <div class=\"details_row-2\">\n                            <div class=\"row form-group\">\n                                <div class=\"col-sm-6\">\n                                    <span style=\"font-size: medium;\">Type of Business</span>\n                                    <p style=\"font-size: small;\">For Business address your package will be delivered only during\n                                        <br>normal work days from 9:00 to 17:00\n                                    </p>\n                                </div>\n                                <div class=\"col-sm-6 details_row-3\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6\">\n                                            <input type=\"radio\" formControlName=\"business\" value=\"Home\" class=\"radio-1\" (change)=\"change()\">&nbsp;Home\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <input type=\"radio\" formControlName=\"business\" value=\"Business\" class=\"radio-1\" (change)=\"change()\">&nbsp;Business\n                                        </div>\n                                        <div class=\"error\" *ngIf=\"formControls.business.touched && formControls.business.errors\">\n                                            <div *ngIf=\"formControls.business.errors.required\">Type of buisness is required</div>\n                                        </div>\n                                    </div>                            \n                                </div>\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row form-group details_row-1\">\n                            <div class=\"col-sm-4\" style=\"font-size: medium;\">\n                                Additional Notes\n                            </div>\n                            <div class=\"col-sm-7 col-sm-offset-1\">\n                                <textarea name=\"notes\" id=\"notes\" cols=\"30\" rows=\"5\" formControlName=\"notes\" class=\"form-control details_row-4\" (change)=\"change()\"></textarea>\n                            </div>\n                            <div class=\"col-sm-11\" style=\"text-align: right; font-size: small;\">Optional</div>\n                        </div>\n                        <!-- Additional Details -->\n                    </div>                    \n                    <!-- Delivery Estimate -->\n                    <div class=\"delivery-1\">\n                        <div class=\"delivery-1_row-1\">\n                            <div class=\"delivery-1_row-2\">\n                                <b style=\"color: grey;\">Estimated delivery in your area is 2 days</b>\n                                <br>\n                                <p><a href=\"\">More info here</a></p>\n                            </div>\n                        </div>\n                    </div><br><br>\n                    <!-- Delivery Estimate -->\n                    <!-- Button -->\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\" mat-raised-button  matStepperNext [disabled]=\"detailsForm.invalid\">Next</button>\n                    <!-- Button -->\n                </form>               \n            </div>\n        </div><br><br>\n        <!-- Form -->        \n    </div>\n</body>\n</html>"
        },
        {
            "name": "InstallmentComponent",
            "id": "component-InstallmentComponent-b318ae1f10bd62834ed260d154dc7135",
            "file": "src/app/components/installment/installment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-installment",
            "styleUrls": [
                "./installment.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./installment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "installmentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "submitInstalmentForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder,Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-installment',\n  templateUrl: './installment.component.html',\n  styleUrls: ['./installment.component.css']\n})\nexport class InstallmentComponent implements OnInit {\n  installmentForm: FormGroup;\n  @Output() OnRegister = new EventEmitter()\n  @Output() OnToggle = new EventEmitter()\n  constructor(private formBuilder: FormBuilder,private router: Router) { }\n\n  ngOnInit()  {\n    this.installmentForm=this.formBuilder.group({\n      term: ['',Validators.required]\n      \n    });\n    \n  }\n  submitInstalmentForm(){\n    \n    this.router.navigate(['/']);\n  }\n  submit=()=>{\n    console.log(this.installmentForm.value, \"policy details\");\n    this.OnRegister.emit(this.installmentForm.value);\n  }\n  change=()=>{\n    if(this.installmentForm.valid){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(this.installmentForm.value);\n    }else{\n      this.OnToggle.emit(false)\n    }\n  }\n\n  get formControl(){\n    return this.installmentForm.controls\n  }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*.container{\n    margin: 0px;\n    padding-top: 50px;\n    width: 2000px;\n}*/\n\n.overflowAuto {\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n.card-body{\n    color:rgb(4, 58, 102);\n    padding-top: 50px;\n    /* width: 2000px;*/ \n    \n}\n.bgn{\n    color:rgb(4, 58, 102);\n    text-align: right;\n    font-size: 20px;\n}\n.cardrow{\n    padding-left: 20px;\n}\n\n.num{\n    color:rgb(4, 58, 102);\n    text-align: end;\n    font-size: 30px;\n    font-weight: bold;\n}\n.mon{\n    text-align: left;\n}\n\n.border{\n      padding: 0%;\n      /*width: 800px;*/\n      height: auto;\n}\n.viewins{\n    display:none;\n}\n.firstcard{\n    /*width:800px;*/\n     height: auto;\n    /*min-width:100px;*/\n }\n .secondcard{\n       \n    /*width:800px;*/\n    height: auto;\n   \n    \n }\n .thirdcard{\n           \n    /*width:800px;*/\n    height:auto;\n   \n}\n.content{\n    height:auto;\n    /*width:1000px;*/\n}\n\n.hrline{\n    /*width:800px;*/\n    margin-left: 30px;\n}\n.wid{\n    padding-top: 2%;\n}\n\n@media screen and (max-width: 800px) {\n    /*.firstcard,.secondcard,.thirdcard,.content,.hrline{\n        width: 350px;\n        \n    }*/\n    .num{\n        font-size: 20px;\n        padding-left: 10%;\n        text-align: left;\n    }.bgn{\n        font-size: 12px;\n        padding-left: 10%;\n        text-align: left;\n    }\n    .col-md-5 col-auto col-7{\n        padding-left: 0%;\n    }\n    .viewins{\n        display:block;\n    }\n    .viewhide, .cardhr{\n        display:none;\n    }\n    h1{\n        font-size: 150%;\n    }\n    .wid{\n        /*width:80%;*/\n        padding-top: 2%;\n    }\n\n    .imgsz{\n        width: auto;\n    }\n  }\n\n\n  \n\n",
                    "styleUrl": "./installment.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formControl": {
                    "name": "formControl",
                    "getSignature": {
                        "name": "formControl",
                        "type": "",
                        "returnType": "",
                        "line": 40
                    }
                }
            },
            "templateData": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<div class=\"container\">\n    <!--<div class=\"col-md-8 offset-3\">-->\n        <div class=\"container-fluid\">\n            <div class=\"card overflowAuto h-100\" style=\"border:  none; \">\n                <div class=\"card-body\">\n                    <h1 class=\"font-weight-bold\">Instalment options</h1><br/>\n                    <form [formGroup]=\"installmentForm\" (submit)=\"submit()\">\n                        <div class=\"form-check\" style=\"padding-left: 0px !important; \">\n                            <!--<div class=\"form-row\">-->\n                                <div>\n                                \n                                    <div class=\"border shadow p-3 mb-3 bg-white rounded firstcard\">\n                                        <div class=\"row cardrow\">\n                                            <div class=\"col-auto mr-auto pt-1\">\n                                                <label class=\"form-check-label\" style=\"font-weight: bold;\">\n                                                    <input class=\"form-check-input\" type=\"radio\" name=\"term\" formControlName=\"term\" value=\"siglePayment\" (change)=\"change()\">Single payment</label>\n                                                    <div><button class=\"btn btn-success mon\">Best Value</button></div>\n                                            </div>   \n                                            <div class=\"col-sm-6 col-auto col-7\">\n                                                <div class=\"num \" >285,00 BGN</div>\n                                                    <div class=\"bgn\" style=\"color: green;\">\n                                                        You save 39.00 BGN\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                            \n                            </div>\n                        </div>\n    \n                        <div class=\"form-check\" style=\"padding-left: 0px !important; \">\n                            <!--<div class=\"form-row\">-->\n                            <div>\n                                \n                                    <div class=\"border shadow p-3 mb-3 bg-white rounded secondcard\">\n                                        <div class=\"row cardrow\">\n                                            <div class=\"col-auto mr-auto pt-1\">\n                                                <label class=\"form-check-label\" style=\"font-weight: bold;\">\n                                                <input class=\"form-check-input\" type=\"radio\" name=\"term\" formControlName=\"term\" value=\"twoPayment\" (change)=\"change()\">Two payments</label>\n                                                <div class=\"mon\">Every 6 months</div>\n                                            </div>\n                                            <div class=\"col-md-4 col-auto col-5\">\n                                                <div class=\"num\">302,00 BGN</div>\n                                                <div class=\"bgn\">\n                                                    You save 22.00 BGN\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <hr class=\"cardhr\">\n                                        <div class=\"viewins\">\n                                            <a href=\"#\">View Instalments</a>\n                                        </div>\n                                        <div class=\"row viewhide\">\n                                            <div class=\"col-auto mr-auto pt-2\">\n                                                    First Instalment\n                                                    <div style=\"font-weight: bold;\">170.27 BGN</div>\n                                            </div>\n                                            <div class=\"col-auto mr-auto pt-2 col-sm offset-1\">\n                                                    Second Instalment\n                                                    <div style=\"font-weight: bold;\">132.40 BGN</div>\n                                            </div>\n                                            \n                                        </div>\n                                        \n                                    </div>\n                                \n                            </div>\n                        </div>\n                        <div class=\"form-check\" style=\"padding-left: 0px !important; \" >\n                            <!--<div class=\"form-row\">-->\n                            <div>\n                                \n                                    <div class=\"border shadow p-3 mb-3 bg-white rounded thirdcard\">\n                                        <div class=\"row cardrow \">\n                                            <div class=\"col-auto mr-auto pt-1\">\n                                                <label class=\"form-check-label\" style=\"font-weight: bold;\">\n                                                <input class=\"form-check-input\" type=\"radio\" name=\"term\" formControlName=\"term\" value=\"fourPayment\"  (change)=\"change()\">Four payments</label>\n                                                <div class=\"mon\">Every 4 months</div>\n                                            </div>\n                                            <div class=\"col-md-4 col-auto col-5\">\n                                                <div class=\"num\">324,00 BGN</div>\n                                            </div>\n                                        </div>\n                                        <hr class=\"cardhr\">\n                                        <div class=\"viewins\">\n                                            <a href=\"#\">View Instalments</a>\n                                        </div>\n                                        <div class=\"row viewhide\">\n                                            <div class=\"col-auto mr-auto pt-2\">\n                                                    First Instalment\n                                                    <div style=\"font-weight: bold;\">170.27 BGN</div>\n                                            </div>\n                                            <div class=\"col-auto mr-auto pt-2\">\n                                                    Second Instalment\n                                                    <div style=\"font-weight: bold;\">132.40 BGN</div>\n                                            </div>\n                                            <div class=\"col-auto mr-auto pt-2\">\n                                                Third Instalment\n                                                <div style=\"font-weight: bold;\">132.40 BGN</div>\n                                            </div>\n                                            <div class=\"col-auto mr-auto pt-2\">\n                                                Fourth Instalment\n                                                <div style=\"font-weight: bold;\">132.40 BGN</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                \n                            </div>\n                        </div>\n                        <hr class=\"hrline\">\n                        <div class=\"form-row content\">\n                            <div class=\"col-auto imgsz\"><img style=\"float: left;\" src=\"assets/tick.jpeg\" />\n                            </div>\n                            <div class=\"col-md-9 wid\">\n                               \n                                Premiums indicated are final and include Contribution to the Guarantee and Inurance Fund, sticker and 2% tax on insurance premiums.\n                                \n                            </div>\n                        </div>\n                        <div class=\"form-row content\">\n                            <div class=\"col-auto imgsz\"><img  src=\"assets/tick.jpeg\"  /></div>\n                            <div class=\"col-md-9 wid\">\n                            \n                            The insurance premium is calculated with included - 5% Discount for insurance with \"Casco+\"\n                            \n                            </div>\n                        </div>\n                        <div class=\"form-row content\">\n                            <div class=\"col-auto imgsz\"><img  src=\"assets/tick.jpeg\"  /></div>\n                            <div class=\"col-md-7 wid\">\n                            Annual Technical Inspection Voucher\n                            </div>\n                            \n                        </div>\n                        <hr  class=\"hrline\">\n                        <button class=\"btn btn-primary rounded-pill\" matStepperNext type=\"submit\" [disabled]=\"installmentForm.invalid\">  Next  </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    \n</div>\n"
        },
        {
            "name": "InsuringPartyComponent",
            "id": "component-InsuringPartyComponent-6f3e1baf8fb9652e47ddd7186511a80b",
            "file": "src/app/components/insuring-party/insuring-party.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-insuring-party",
            "styleUrls": [
                "./insuring-party.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./insuring-party.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "insuringParty",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-insuring-party',\n  templateUrl: './insuring-party.component.html',\n  styleUrls: ['./insuring-party.component.css']\n})\nexport class InsuringPartyComponent implements OnInit {\n  @Output() OnRegister= new EventEmitter()\n  @Output() OnToggle=new EventEmitter()\n  insuringParty: FormGroup;\n  constructor(private router: Router, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.insuringParty = this.fb.group({\n      egn: ['', Validators.required],\n      address: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])]\n\n    });\n  }\n  // next() {\n  //   this.router.navigate(['/policy_details']);\n  // }\n  submit=() => {\n    console.log(this.insuringParty.value,\"insuring party\");\n    this.OnRegister.emit(this.insuringParty.value);\n\n  }\n  change=()=>{\n    \n    if(this.insuringParty.valid){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(this.insuringParty.value);\n    }else{\n      this.OnToggle.emit(false)\n    }\n  }\n  get formsControl(){\n    return this.insuringParty.controls\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input[type=text],input[type=date],input[type=email]{border-radius: 7px;}\nselect{border-radius: 7px;}\nh1{color: #003768;}\n",
                    "styleUrl": "./insuring-party.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formsControl": {
                    "name": "formsControl",
                    "getSignature": {
                        "name": "formsControl",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                }
            },
            "templateData": "<div class=\"col-12\">\n    <h1 class=\"display-1 \">Insuring Party</h1>\n    <form [formGroup]=\"insuringParty\">\n        <div class=\"form-row\">\n            <div class=\"col-8\">\n                Enter your EGN/EIK/LNCH\n            </div>\n            <div class=\"col-4\">\n                <input class=\"form-control\" type=\"text\" formControlName=\"egn\" (change)=\"change()\">\n                <div class=\"error\" *ngIf=\"formsControl.egn.touched && formsControl.egn.errors\">\n                    <div *ngIf=\"formsControl.egn.errors.required\">EGN/EIK/LNCH is required </div>\n                </div>\n            </div>\n        </div>\n        <hr>\n\n        <div class=\"form-row\">\n            <div class=\"col-8\">\n                Place of Permanent Residence?\n            </div>\n            <div class=\"col-4\">\n                <select formControlName=\"address\" class=\"form-control\" (change)=\"change()\">\n                    <option selected disabled value=\"\">--SELECT--</option>\n                    <option value=\"delhi\">Delhi</option>\n                    <option value=\"mumbai\">Mumbai</option>\n                </select>\n                <div class=\"error\" *ngIf=\"formsControl.address.touched && formsControl.address.errors\">\n                    <div *ngIf=\"formsControl.address.errors.required\">Place of Permanent Residence is required </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n        <div class=\"form-row\">\n            <div class=\"col-8\">\n                Email\n            </div>\n            <div class=\"col-4\">\n                <input class=\"form-control\" type=\"email\" formControlName=\"email\" (change)=\"change()\">\n                <div class=\"error\" *ngIf=\"formsControl.email.touched && formsControl.email.errors\">\n                    <div *ngIf=\"formsControl.email.errors.required\">Email is required </div>\n                    <div *ngIf=\"formsControl.email.errors.pattern\">Please enter a valid email </div>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <button type=\"button\" class=\"btn btn-primary badge-pill pl-4 pr-4 pt-2 pb-2\" style=\"margin-right: 0;\"\n            (click)=\"submit()\" matStepperNext [disabled]=\"insuringParty.invalid\">Next</button>\n    </form>\n</div>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-856e8576661cbbd2219f4f6b35ae6cf7",
            "file": "src/app/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "redirect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(private router: Router) { }\nemail: string;\npassword: string;\n  ngOnInit() {\n  }\n  login() : void {\n    if(this.email == 'admin' && this.password == 'admin'){\n     this.router.navigate([\"tab\"]);\n    }else {\n      alert(\"Invalid credentials\");\n    }\n  }\n\n  redirect(){\n    this.router.navigate([\"tab\"]);\n  }\n  }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* .monospace {\n    font-family: \"Lucida Console\", Courier, monospace;\n    font-weight: bold;\n    color: midnightblue;\n  }\n  .btn{\n    border-radius: 15px;\n\n  }\n  .example-card{\n   width: 100%;\n    \n    \n  }\n  .images{\n    max-width:100 px;\n\n  }\n.example-full-width{\n  width: 100%;\n  position:center;\n} */\n.login-card-description{\n  font-family: \"Lucida Console\", Courier, monospace;\n    font-weight: bold;\n    color: midnightblue;\n    font-size: 20px;\n}\n.login-btn {\n  padding: 10px 20px 10px;\n  background-color:rgb(9, 113, 231);\n  border-radius: 20px;\n  font-size: 15px;\n  /* font-weight: bold; */\n  line-height: 20px;\n  color: #fff;\n  margin-bottom: 24px; \n}\n.hr-text{\n  position: relative;\n  border: none;\n  height: 1px;\n  background: #999;\n}\n.redirect-btn{\n  padding: 10px 20px 10px;\n  background-color:rgb(8, 30, 66);\n  border-radius: 20px;\n  font-size: 15px;\n  /* font-weight: bold; */\n  line-height: 20px;\n  color: #fff;\n  margin-bottom: 24px; \n\n}\n.login-card-footer-text{\n  color:gray;\n}",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- \n<div class=\"container\"> \n  <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n    <mat-grid-tile>\n      <div class=\"images\"> \n        <img src=\"../../../assets/WhatsApp Image 2020-06-15 at 7.54.49 PM.jpeg\"/>\n      </div>\n    </mat-grid-tile>\n    <mat-grid-tile>  \n\n      <mat-card class=\"example-card\">\n        <img src=\"../../../assets/logo.jpeg\"/>\n          \n            <mat-card-title class=\"monospace\">Sign In</mat-card-title>\n         \n          \n          <div class=\"text-primary\">Forget Password?</div>\n          \n          <mat-card-content>\n            <form class=\"example-form\">\n              <table class=\"example-full-width\" cellspacing=\"0\">\n                <tr>\n                  <td>\n                  <mat-label > Email</mat-label><br>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <input matInput placeholder=\"Enter your email\"  [(ngModel)]=\"email\" name=\"email\" required>\n                    </mat-form-field>\n                  </td>\n                </tr>\n                <tr>\n                    \n                <td>\n                  <mat-label > Password</mat-label><br>\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <input matInput placeholder=\"Password\" [(ngModel)]=\"password\"type=\"password\" name=\"password\" required>\n                </mat-form-field></td>\n              </tr></table>\n            </form>\n          </mat-card-content>\n          <mat-card-actions>\n            &nbsp;&nbsp;&nbsp;<button mat-raised-button (click)=\"login()\" class=\"btn btn-primary btn\">Login</button>\n          </mat-card-actions>\n          <mat-divider></mat-divider>\n          <mat-card-actions>\n            &nbsp;&nbsp;&nbsp;<button mat-raised-button (click)=\"redirect()\" class=\"btn btn-primary\">Continue as as guest</button>\n          </mat-card-actions>\n        </mat-card>\n      </mat-grid-tile>\n    \n  </mat-grid-list>\n  \n  \n\n</div> -->\n<main class=\"d-flex align-items-center min-vh-100 py-3 py-md-0\">\n  <div class=\"container\">\n    <div class=\"card login-card\">\n      <div class=\"row no-gutters\">\n        <div class=\"col-md-5\">\n          <img src=\"../../../assets/cardimg.jpeg\" alt=\"login\" class=\"login-card-img\">\n        </div>\n        <div class=\"col-md-7\">\n          <div class=\"card-body\">\n            <div class=\"brand-wrapper\">\n              <img src=\"../../../assets/logo.jpeg\" alt=\"logo\" class=\"logo\">\n            </div>\n            <p class=\"login-card-description\">Sign In</p>\n            <a href=\"#!\" class=\"forgot-password-link\">Forgot password?</a>\n            <form action=\"#!\">\n\n                <div class=\"form-group\">\n                  <label for=\"email\" class=\"sr-only\">Email</label>\n                  <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" [(ngModel)]=\"email\" placeholder=\"Email address\">\n                </div>\n                <div class=\"form-group mb-4\">\n                  <label for=\"password\" class=\"sr-only\">Password</label>\n                  <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" [(ngModel)]=\"password\" placeholder=\"***********\">\n                </div>\n                <input name=\"login\" id=\"login\" class=\"btn  login-btn \" type=\"button\" (click)=\"login()\" value=\"Login\">\n    \n                  <hr data-content=\"OR\" class=\"hr-text\">\n                  <input name=\"redirect\" id=\"redirect\" class=\"btn redirect-btn btn-block\" type=\"button\" (click)=\"redirect()\" value=\"Continue as a Guest\">\n              \n              </form>\n             \n              <p class=\"login-card-footer-text\">You can create your account at the end of the process <a href=\"#!\" class=\"text-reset\">Register here</a></p>\n              \n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- <div class=\"card login-card\">\n      <img src=\"assets/images/login.jpg\" alt=\"login\" class=\"login-card-img\">\n      <div class=\"card-body\">\n        <h2 class=\"login-card-title\">Login</h2>\n        <p class=\"login-card-description\">Sign in to your account to continue.</p>\n        <form action=\"#!\">\n          <div class=\"form-group\">\n            <label for=\"email\" class=\"sr-only\">Email</label>\n            <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\" class=\"sr-only\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\">\n          </div>\n          <div class=\"form-prompt-wrapper\">\n            <div class=\"custom-control custom-checkbox login-card-check-box\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n              <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\n            </div>              \n            <a href=\"#!\" class=\"text-reset\">Forgot password?</a>\n          </div>\n          <input name=\"login\" id=\"login\" class=\"btn btn-block login-btn mb-4\" type=\"button\" value=\"Login\">\n        </form>\n        <p class=\"login-card-footer-text\">Don't have an account? <a href=\"#!\" class=\"text-reset\">Register here</a></p>\n      </div>\n    </div> -->\n  </div>\n</main>"
        },
        {
            "name": "MTPLCalculatorComponent",
            "id": "component-MTPLCalculatorComponent-375898c0db741c8779db8cfa7f2fa209",
            "file": "src/app/components/mtpl-calculator/mtpl-calculator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mtpl-calculator",
            "styleUrls": [
                "./mtpl-calculator.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./mtpl-calculator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "NextTabSwitch",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "line": 11,
                    "type": "EventEmitter<StepperSelectionEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "covers",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "coversData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "installments",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "installmentsData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "insuringParty",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "insuringPartyData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "mtplCalculaterData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "nextTab",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "policyDetails",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "policyDetailsData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "summary",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "toggle1",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "toggle2",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "toggle3",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "toggle4",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "toggle5",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "toggle6",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "vehicle",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "vehicleData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { CommonDataService } from 'src/app/common-data.service';\n\n@Component({\n  selector: 'app-mtpl-calculator',\n  templateUrl: './mtpl-calculator.component.html',\n  styleUrls: ['./mtpl-calculator.component.css']\n})\nexport class MTPLCalculatorComponent implements OnInit {\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent>\n  @Output() NextTabSwitch = new EventEmitter()\n  constructor(private _commonData:CommonDataService) { }\n\n  ngOnInit(): void {\n  }\n  \n  vehicle\n  insuringParty\n  policyDetails\n  installments\n  covers\n  summary\n  toggle1=false\n  toggle2=false\n  toggle3=false\n  toggle4=false\n  toggle5=false\n  toggle6=true\n  mtplCalculaterData\n\n\n  vehicleData=(data)=>{\n    this.vehicle=data\n    console.log(this.vehicle);\n  }\n\n  insuringPartyData=(data)=>{\n    this.insuringParty=data\n    console.log(this.insuringParty);\n  }\n\n  policyDetailsData=(data)=>{\n    this.policyDetails=data\n    console.log(this.policyDetails);\n  }\n\n  installmentsData=(data)=>{\n    this.installments=data\n    console.log(this.installments);\n  }\n\n  coversData=(data)=>{\n    this.covers=data\n    console.log(this.covers);\n    this.mtplCalculaterData={\n      vehicleData:this.vehicle,\n      insuringPartyData:this.insuringParty,\n      policyDetailsData:this.policyDetails,\n      installmentsData:this.installments,\n      coversData:this.covers\n    }\n  this._commonData.formData.next(this.mtplCalculaterData)\n  //  this._commonData.formData.subscribe(data=>{\n  //    console.log(data);\n  //    }) \n  }\n\n\n  nextTab=(data)=>{\n    this.NextTabSwitch.emit(data)\n  }\n  change=(data)=>{\n    console.log(data);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mtpl-calculator.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-horizontal-stepper  (selectionChange)=\"change($event)\" labelPosition=\"bottom\" #stepper linear>\n  \n      <mat-step completed={{toggle1}}>\n        <ng-template matStepLabel>Vehicle </ng-template>\n        <app-v-info (OnRegister)=\"vehicleData($event)\" (OnToggle)=\"toggle1=$event\"></app-v-info>\n      </mat-step>\n\n      <mat-step completed={{toggle2}}>\n        <ng-template matStepLabel>Insuring Party</ng-template>\n        <app-insuring-party (OnRegister)=\"insuringPartyData($event)\" (OnToggle)=\"toggle2=$event\"></app-insuring-party>\n      </mat-step>\n\n      <mat-step completed={{toggle3}}>\n        <ng-template matStepLabel>Policy Details</ng-template>\n        <app-policy-details (OnRegister)=\"policyDetailsData($event)\" (OnToggle)=\"toggle3=$event\"></app-policy-details>\n      </mat-step>\n\n      <mat-step completed={{toggle4}}>\n        <ng-template matStepLabel>Installments</ng-template>\n        <app-installment (OnRegister)=\"installmentsData($event)\" (OnToggle)=\"toggle4=$event\"></app-installment>\n      </mat-step>\n\n      <mat-step completed={{toggle5}}>\n        <ng-template matStepLabel>Covers</ng-template>\n        <app-additional-covers (OnRegister)=\"coversData($event)\" (OnToggle)=\"toggle5=$event\" (NextTab)=\"nextTab($event)\"></app-additional-covers>\n      </mat-step>\n\n      <!-- <mat-step completed={{toggle6}}>\n        <ng-template matStepLabel>Summary</ng-template>\n        Summary\n      </mat-step> -->\n\n</mat-horizontal-stepper>\n"
        },
        {
            "name": "MTPLPolicyComponent",
            "id": "component-MTPLPolicyComponent-d4fa7e19f66d94b102bf08e51dd58985",
            "file": "src/app/components/mtpl-policy/mtpl-policy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mtpl-policy",
            "styleUrls": [
                "./mtpl-policy.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./mtpl-policy.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contactDetailsData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "contactInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "deliveryData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "deliveryInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "formData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "personalData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "personalInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "toggle1",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "toggle2",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "toggle3",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "toggle4",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "toggle5",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "toggle6",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "vehicleOwnerData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "vehicleOwnerInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CommonDataService } from 'src/app/common-data.service';\n\n@Component({\n  selector: 'app-mtpl-policy',\n  templateUrl: './mtpl-policy.component.html',\n  styleUrls: ['./mtpl-policy.component.css']\n})\nexport class MTPLPolicyComponent implements OnInit {\n\n  constructor(private _commonData:CommonDataService) { }\n\n  ngOnInit(): void {\n  }\n  toggle1=false\n  toggle2=false\n  toggle3=false\n  toggle4=true\n  toggle5=true\n  toggle6=true\n  personalInformation\n  contactInformation\n  vehicleOwnerInformation\n  deliveryInformation\nformData\n\n\n  personalData=(data)=>{\n    this.personalInformation=data\n    console.log(this.personalInformation);\n  }\n\n  contactDetailsData=(data)=>{\n    this.contactInformation=data\n    console.log(this.contactInformation);\n  }\n\n  vehicleOwnerData=(data)=>{\n    this.vehicleOwnerInformation=data\n    console.log(this.vehicleOwnerInformation);\n  }\n  \n  deliveryData=(data)=>{\n    this.deliveryInformation=data;\n    this.formData={\n      personalInformation:this.personalInformation,\n      contactInformation:this.contactInformation,\n      vehicleOwnerInformation:this.vehicleOwnerInformation,\n      deliveryInformation:this.deliveryInformation\n    \n      }\n    this._commonData.policyData.next(this.formData)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mtpl-policy.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-horizontal-stepper labelPosition=\"bottom\" #stepper >\n  <mat-step completed={{toggle1}}>\n    <ng-template matStepLabel>Personal details</ng-template>\n    <app-personal (OnRegister)=\"personalData($event)\" (OnToggle)=\"toggle1=$event\"></app-personal>\n  </mat-step>  \n  \n  <mat-step completed={{toggle2}}>\n    <ng-template matStepLabel>Contact details</ng-template>\n    <app-contact (OnRegister)=\"contactDetailsData($event)\" (OnToggle)=\"toggle2=$event\"></app-contact>\n  </mat-step> \n  \n  <mat-step completed={{toggle3}}>\n    <ng-template matStepLabel>Vehicle Owner</ng-template>\n    <app-vehicle-owner (OnRegister)=\"vehicleOwnerData($event)\" (OnToggle)=\"toggle3=$event\"></app-vehicle-owner>\n  </mat-step>  \n\n  <mat-step completed={{toggle4}}>\n    <ng-template matStepLabel>Delivery</ng-template>\n    <app-delivery (OnRegister)=\"deliveryData($event)\" (OnToggle)=\"toggle4=$event\"></app-delivery>\n  </mat-step>  \n\n  <mat-step completed={{toggle5}}>\n    <ng-template matStepLabel>Summary</ng-template>\n    <app-proposal></app-proposal>\n  </mat-step>  \n\n  <mat-step completed={{toggle6}}>\n    <ng-template matStepLabel>Payment</ng-template>\n    <app-payment></app-payment>\n  </mat-step> \n\n  <!-- <mat-step >\n        <ng-template matStepLabel>Policy Details</ng-template>\n        <app-policy-details  ></app-policy-details>\n      </mat-step>\n        \n      <mat-step >\n        <ng-template matStepLabel>Vehicle </ng-template>\n        <app-v-info ></app-v-info>\n       \n      </mat-step> -->\n</mat-horizontal-stepper>\n"
        },
        {
            "name": "PaymentComponent",
            "id": "component-PaymentComponent-6f4b7f14a1fa1b3b19bce1a53eb81c51",
            "file": "src/app/components/payment/payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payment",
            "styleUrls": [
                "./payment.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".row{\n    margin: 0;\n}\n.heading{\n    color: #003564;\n    padding-top: 20px;\n}\n.bg-dark-blue{\n    background-color:  #003564;\n    color: #ffffff;\n}\n.middle-heading{\n    display: flex;\n    height: 100%;\n    align-items: center;\n}\n.radio{\n    border-radius: 10px;\n    -webkit-box-shadow: 0 0 10px #ccc;\n    box-shadow: 0 0 10px #ccc;\n}\n.radio-inner{\n    width: 100%;\n    height: 100%;\n    padding: 20px;\n    margin: 0;\n    cursor: pointer;\n}\n.radio-action{\n    width: 25px;\n}\ninput[type=\"checkbox\" i]{\n    margin: 0px 8px 0px 0px;\n}\n.buy-btn{\n    border-radius:20px;\n}\n.user-key{\n    width: 40px;\n    position: absolute;\n    z-index: 1;\n    top: 15px;\n    left: -17px;\n}\n.text-color{\n    color: #003564\n}\n@media all and (max-width: 767px) {\n    .text-small{\n        font-size:11px;\n    }\n}",
                    "styleUrl": "./payment.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container p-0 px-sm-3\">\n    <div class=\"row pb-4\">\n        <div class=\"col-md-9 col-12 m-auto p-0\">\n            <h2 class=\"heading\">Select payment option</h2>\n            <div class=\"card bg-dark-blue\">\n                <div class=\"card-body p-2\">\n                    <div class=\"row\">\n                        <div class=\"col-md-2 col-2 motor-img p-0\">\n                            <img src=\"../../assets/motor_policy.PNG\">\n                        </div>\n                        <div class=\"col-md-10 col-9 pr-0 m-auto\">\n                            <div class=\"row\">\n                                <div class=\"col-md-9 col-12 p-0\">\n                                    <span class=\"middle-heading text-small\">Motor Third party Liability Policy</span>\n                                </div>\n                                <div class=\"col-md-3 col-12 p-0\">\n                                    <div>\n                                        <div><strong>324,00BGN</strong></div>\n                                        <div class=\"text-small\">four payments</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"container-fluid\">\n                <div class=\"row pt-3\">\n                    <div class=\"col-md-4 p-0\">\n                        <label class=\"text-color\">Select payment method</label>\n                    </div>\n                    \n                    <div class=\"col-md-8 radio-container p-0\">\n                        <div class=\"row justify-content-around\">\n                            <div class=\"col-md-5 radio mb-3 p-0\">\n                                <label class=\"radio-inner d-flex flex-sm-column\">\n                                    <div class=\"radio-action d-flex flex-sm-column align-items-center align-items-sm-baseline\"><input type=\"radio\" name=\"optradio\" checked></div>\n                                    <div class=\"text-center d-flex flex-sm-column align-items-center\">\n                                        <div class=\"radio-img\"><img src=\"../../assets/credit-card.PNG\"></div>\n                                        <div class=\"text-color\">Credit/debit card</div>\n                                    </div>\n                                </label>\n                            </div>\n                            <div class=\"col-md-5 radio mb-3 p-0\">\n                                <label class=\"radio-inner d-flex flex-sm-column\">\n                                    <div class=\"radio-action d-flex flex-sm-column align-items-center align-items-sm-baseline\"><input type=\"radio\" name=\"optradio\"></div>\n                                    <div class=\"text-center d-flex flex-sm-column align-items-center\">\n                                        <div class=\"radio-img\"><img src=\"../../assets/e-pay.PNG\"></div>\n                                        <div class=\"text-color\">ePay</div>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n                <div class=\"row\">\n                    <div class=\"col-md-12 p-0 pl-3\">\n                        <div class=\"card border-warning mb-4\">\n                            <img class=\"user-key\" src=\"../../assets/user-key.png\">\n                            <div class=\"card-body\">\n                                <p class=\"card-text pl-3 text-color\">\n                                    If you are not the card holder, you will be asked to sign the policy with \n                                    e-Signature. If you don't own an e-Signature, please pay with your own card\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col shadow-lg p-3 mb-5 bg-white rounded d-flex align-items-baseline\">\n                        <input type=\"checkbox\" ngModel #chkEnable>\n                        <label class=\"text-color\">I declare I am owner of the card for this payment</label><br>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12 p-0\">\n                    <button class=\"btn btn-info px-5 buy-btn\" [disabled]=\"!chkEnable.checked\">Buy Policy</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>"
        },
        {
            "name": "PersonalComponent",
            "id": "component-PersonalComponent-48f6a109ecdf70b4bb68c8da117b8b81",
            "file": "src/app/components/personal/personal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-personal",
            "styleUrls": [
                "./personal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./personal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "citizens",
                    "defaultValue": "['Indian','American','African']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "personalForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "success",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.css']\n})\nexport class PersonalComponent implements OnInit {\n  @Output() OnRegister= new EventEmitter()\n  @Output() OnToggle=new EventEmitter()\n  personalForm:FormGroup;\n  citizens=['Indian','American','African'];\n  constructor(private formBuilder:FormBuilder) { }\n  success(){\n    //console.log(this.personalForm.value);\n    //console.log(this.personalForm.value,\"vehicle Info\");\n    // this.OnToggle.emit(true)\n    this.OnRegister.emit(this.personalForm.value);\n  }\n  change=()=>{\n      \n    if(this.personalForm.valid){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(this.personalForm.value);\n    }else{\n      this.OnToggle.emit(false)\n      // this.OnRegister.emit(this.personalForm.value);\n    }\n  }\n\n  ngOnInit(): void {\n    this.personalForm=this.formBuilder.group({\n      lnch:['',Validators.required],\n      fullname:this.formBuilder.group({\n        firstname:['',Validators.required],\n        lastname:['',Validators.required],\n        surname:[]\n      }),\n      fullnameeng:this.formBuilder.group({\n        firstnameeng:['',Validators.required],\n        lastnameeng:['',Validators.required],\n        surnameeng:[]\n      }),\n      citizen:['',Validators.required],\n      birth:['',Validators.required]\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-control{\r\n    width:180px\r\n}\r\n\r\n/*.container{\r\n    margin: 200px;\r\n}*/\r\n\r\nh1{\r\n    margin-left: 1px;\r\n    margin-bottom: 20px;\r\n    color: darkblue;\r\n}\r\nlabel{\r\n    color: darkgray;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\n.col-sm-4{\r\n    padding-left: 205px;\r\n   \r\n}\r\nhr{\r\n    width:50%;\r\n    text-align:left;\r\n    margin-left:0;\r\n}\r\n.panel{\r\n    border-color:yellow;\r\n    width: 555px;\r\n}\r\n.error{\r\n    color: red;\r\n}\r\n.btn{\r\n    border-radius: 50px;\r\n    min-width: 100px;\r\n  }\r\n@media screen and (max-width: 800px) {\r\n    .col-sm-4{\r\n        padding-left:13px;\r\n\r\n    }\r\n    .panel{\r\n        width: 177px;;\r\n    }\r\n}",
                    "styleUrl": "./personal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n\n<div class=\"container col-12\">\n    <h1>Personal Details</h1>\n    <form [formGroup]=\"personalForm\"  (ngSubmit)=\"success()\">\n      <div class=\"form-group row \">\n        <label for=\"lnch\" class=\"col-sm-2 col-form-label\">LNCH</label>\n        <div class=\"col-sm-4\">\n          <input type=\"text\" class=\"form-control\" id=\"lnch\" placeholder=\"Enter LNCH\" formControlName=\"lnch\"  name=\"lnch\" (change)=\"change()\">\n          <div *ngIf=\"personalForm.controls.lnch.hasError('required') &&(personalForm.controls.lnch.dirty || personalForm.controls.lnch.touched)\" class=\"error\">Please enter the LNCH no</div>\n        </div>\n      </div>\n      <hr>\n     <div formGroupName=\"fullname\">\n        <label class=\"\">Full Name</label><br>\n      <div class=\"form-group row\">\n        \n        <div class=\"col-sm-2\">\n        <input type=\"text\" class=\"form-control\" id=\"firstname\" placeholder=\"Enter firstname\" formControlName=\"firstname\"  name=\"firstname\" (change)=\"change()\">\n        <div *ngIf=\"personalForm.get('fullname').get('firstname').hasError('required') &&(personalForm.get('fullname').get('firstname').dirty || personalForm.get('fullname').get('firstname').touched)\" class=\"error\">Please enter your first name</div>\n        </div>\n        <div class=\"col-sm-2\">\n        <input type=\"text\" class=\"form-control\" id=\"lastname\" placeholder=\"Enter lastname\" formControlName=\"lastname\"  name=\"lastname\" (change)=\"change()\"> \n        <div *ngIf=\"personalForm.get('fullname').get('lastname').hasError('required') &&(personalForm.get('fullname').get('lastname').dirty || personalForm.get('fullname').get('lastname').touched)\" class=\"error\">Please enter your lastname</div>\n        </div>\n        <div class=\"col-sm-2\">\n        <input type=\"text\" class=\"form-control\" id=\"surname\" placeholder=\"Enter surname\" formControlName=\"surname\"  name=\"suname\" (change)=\"change()\">\n        </div>\n      </div>\n     </div>\n     <hr>\n     <div formGroupName=\"fullnameeng\">\n        <label>Full Name in English</label><br>\n        <div class=\"form-group row\">\n            <div class=\"col-sm-2\">\n          <input type=\"text\" class=\"form-control\" id=\"firstnameeng\" placeholder=\"Enter firstname\" formControlName=\"firstnameeng\"  name=\"firstnameeng\" (change)=\"change()\">\n          <div *ngIf=\"personalForm.get('fullnameeng').get('firstnameeng').hasError('required') &&(personalForm.get('fullnameeng').get('firstnameeng').dirty || personalForm.get('fullnameeng').get('firstnameeng').touched)\" class=\"error\">Please enter your first name</div>\n          </div>\n          <div class=\"col-sm-2\">\n          <input type=\"text\" class=\"form-control\" id=\"lastnameeng\" placeholder=\"Enter lastname\" formControlName=\"lastnameeng\"  name=\"lastnameeng\" (change)=\"change()\">\n          <div *ngIf=\"personalForm.get('fullnameeng').get('lastnameeng').hasError('required') &&(personalForm.get('fullnameeng').get('lastnameeng').dirty || personalForm.get('fullnameeng').get('lastnameeng').touched)\" class=\"error\">Please enter your lastname</div>\n          </div>\n          <div class=\"col-sm-2\">\n          <input type=\"text\" class=\"form-control\" id=\"surnameeng\" placeholder=\"Enter surname\" formControlName=\"surnameeng\"  name=\"sunameeng\" (change)=\"change()\">\n        </div>\n        </div>\n       </div>\n       <div class=\"panel panel-default\">\n        <div class=\"panel-body\">Please compare data in latin with data in vehicle registration certificate\n            or identity document.Data will be used for printout of Green Card Certificate.\n        </div>\n      </div>\n       <div class=\"form-group row\">\n        <label for=\"citizen\" class=\"col-sm-2 col-form-label\">Citizenship</label>\n        <div class=\"col-sm-4\">\n        <select class=\"form-control\" id=\"citizen\" formControlName=\"citizen\" name=\"citizen\" (change)=\"change()\">\n          <option *ngFor=\"let c of citizens\" [value]=\"c\">{{c}}</option>\n        </select>\n        <div *ngIf=\"personalForm.controls.citizen.hasError('required') &&(personalForm.controls.citizen.dirty || personalForm.controls.citizen.touched)\" class=\"error\">Please select your Citizenship</div>\n        </div>\n      </div>\n      <hr>\n      <div class=\"form-group row\">\n        <label for=\"birth\" class=\"col-sm-2 col-form-label\">Birth Date</label>\n        <div class=\"col-sm-4\">\n        <input type=\"date\" class=\"form-control\"  id=\"birth\" placeholder=\"Enter Birth date\" formControlName=\"birth\"  name=\"birth\" (change)=\"change()\">\n        <div *ngIf=\"personalForm.controls.birth.hasError('required') &&(personalForm.controls.birth.dirty || personalForm.controls.birth.touched)\" class=\"error\">Please select your birth date </div>\n        </div>\n    </div>\n      <hr>\n      <button type=\"button\" class=\"btn btn-primary btn-lg\" mat-raised-button  matStepperNext [disabled]=\"!personalForm.valid\">Next</button>\n    </form>\n  </div>"
        },
        {
            "name": "PolicyDetailsComponent",
            "id": "component-PolicyDetailsComponent-76bf677b1f2f9c302908e2dbdda4f7d5",
            "file": "src/app/components/policy-details/policy-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-policy-details",
            "styleUrls": [
                "./policy-details.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./policy-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "registerForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-policy-details',\n  templateUrl: './policy-details.component.html',\n  styleUrls: ['./policy-details.component.css']\n})\nexport class PolicyDetailsComponent implements OnInit {\n\n  @Output() OnRegister = new EventEmitter()\n  @Output() OnToggle = new EventEmitter()\n  registerForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      policyDate: ['', Validators.required],\n      policyLength: ['', Validators.required],\n      check1: ['', Validators.requiredTrue],\n      check2: ['', Validators.requiredTrue]\n    });\n  }\n  submit=()=>{\n    console.log(this.registerForm.value, \"policy details\");\n    this.OnRegister.emit(this.registerForm.value);\n  }\n  change=()=>{\n    if(this.registerForm.valid){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(this.registerForm.value);\n    }else{\n      this.OnToggle.emit(false)\n    }\n  }\n  get formControls(){\n    return this.registerForm.controls\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./policy-details.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formControls": {
                    "name": "formControls",
                    "getSignature": {
                        "name": "formControls",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                }
            },
            "templateData": "<h1 class=\"font-weight-bold\">Policy Details</h1>\n<form [formGroup]=\"registerForm\">\n<div class=\"form-row\">\n    <div class=\"col-auto mr-auto pt-2\">\n        Start Date\n    </div>\n    <div class=\"col-md-4 col-auto col-7\">\n        <input class=\"form-control\" type=\"date\" formControlName=\"policyDate\" (change)=\"change()\">\n        <div class=\"error\" *ngIf=\"formControls.policyDate.touched && formControls.policyDate.errors\">\n            <div *ngIf=\"formControls.policyDate.errors.required\">Start Date is required</div>\n        </div>\n    </div>  \n</div>\n<hr>\n<div class=\"form-row\">\n    <div class=\"col-auto mr-auto pt-2\">\n        Policy length\n    </div>\n    <div class=\"col-md-4 col-auto col-7\">\n        <select formControlName=\"policyLength\" class=\"form-control\" (change)=\"change()\">\n            <option selected disabled value=\"\">--SELECT--</option>\n            <option value=\"1\">1 Month</option>\n            <option value=\"3\">3 Months</option>\n            <option value=\"6\">6 Months</option>\n            <option value=\"12\">12 Months</option>\n        </select>\n        <div class=\"error\" *ngIf=\"formControls.policyLength.touched && formControls.policyLength.errors\">\n            <div *ngIf=\"formControls.policyLength.errors.required\">Policy Length is required</div>\n        </div>\n    </div>\n</div>\n<hr>\n\n<div class=\" border shadow p-3 mb-3 bg-white rounded\">\n    <input type=\"checkbox\" formControlName=\"check1\" (change)=\"change()\"> I have read and accepted <span class=\"text-primary\">\"Personal Data Protection Information\"</span>\n\n</div>\n<div class=\"error\" *ngIf=\"formControls.check1.touched && formControls.check1.errors\">\n    <div *ngIf=\"formControls.check1.invalid\">Please read and accept </div>\n</div>\n<div class=\"border shadow p-3 mb-3 bg-white rounded\">\n    <input type=\"checkbox\" formControlName=\"check2\" (change)=\"change()\"> I have read the <span class=\"text-primary\">\"Motor Insurance Third Party Liability Insurance Document\"</span>\n\n</div>\n<div class=\"error\" *ngIf=\"formControls.check2.touched && formControls.check2.errors\">\n    <div *ngIf=\"formControls.check2.invalid\">Please read and accept </div>\n</div>\n<br>\n</form>\n<button class=\"btn btn-primary rounded-pill\" (click)=\"submit()\"  matStepperNext [disabled]=\"!registerForm.valid\">Calculate</button>\n"
        },
        {
            "name": "ProposalComponent",
            "id": "component-ProposalComponent-d68fc8262e7dcbd2d08d81aff472875c",
            "file": "src/app/components/proposal/proposal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-proposal",
            "styleUrls": [
                "./proposal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./proposal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "first",
                    "defaultValue": "\"170.27 BGN\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "fourth",
                    "defaultValue": "'abcd'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "mtplCalculatorData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "mtplPolicyData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "sdate",
                    "defaultValue": "'04-03-54'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "secondI",
                    "defaultValue": "\"182.40 BGN\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "summaryForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "third",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CommonDataService } from 'src/app/common-data.service';\n\n@Component({\n  selector: 'app-proposal',\n  templateUrl: './proposal.component.html',\n  styleUrls: ['./proposal.component.css']\n})\nexport class ProposalComponent implements OnInit {\n\n  summaryForm:FormGroup;\n  first:string=\"170.27 BGN\";\n  secondI:string=\"182.40 BGN\";\n  third:string='';\n  fourth:string='abcd';\n  sdate:string='04-03-54';\n  mtplCalculatorData;\n  mtplPolicyData;\n\n    \n  constructor(private fb: FormBuilder,private _dataService:CommonDataService) { }\n\n  ngOnInit(): void {\n    this._dataService.formData.subscribe(data=>{\n      this.mtplCalculatorData=data;\n      console.log(this.mtplCalculatorData);\n     })\n     this._dataService.policyData.subscribe(data=>{\n       console.log(data);\n       \n       this.mtplPolicyData=data;\n       console.log(this.mtplPolicyData[\"vehicleOwnerInformation\"]);\n       \n       if(this.mtplPolicyData[\"vehicleOwnerInformation\"]==\"Yes\"){\n         var obj={    fullname: {firstname: this.mtplPolicyData[\"personalInformation\"].fullname.firstname,\n          lastname: this.mtplPolicyData[\"personalInformation\"].fullname.lastname, \n          surname: this.mtplPolicyData[\"personalInformation\"].fullname.surname},\n          city: this.mtplPolicyData[\"contactInformation\"].city,\n          street:this.mtplPolicyData[\"contactInformation\"].street,\n     \n       lnch: this.mtplPolicyData[\"personalInformation\"].lnch\n     \n            \n         }\n         this.mtplPolicyData[\"vehicleOwnerInformation\"]=obj\n         \n         \n         \n       }\n       \n\n     })\n    \n    this.summaryForm=this.fb.group({\n      firstInstalment:[this.first,Validators.required],\n      secondInstalment:[this.secondI,Validators.required],\n      thirdInstalment:[this.third,Validators.required],\n      fourthInstalment:[this.fourth,Validators.required],\n      additionalCover:['',Validators.required],\n      startDate:[this.sdate,Validators.required],\n      endDate:['',Validators.required],\n      vehicleRegistration:['',Validators.required],\n      vehiclePurpose:['',Validators.required],\n      certificationNumber:['',Validators.required],\n      days:['',Validators.required],\n      number:['',Validators.required],\n      fullName:['',Validators.required],\n      phoneNumber:['',Validators.required],\n      email:['',Validators.required],\n      cityZipcode:['',Validators.required],\n      streetNumber:['',Validators.required],\n      apartment:['',Validators.required],\n      egnnumber:['',Validators.required],\n      fullnamevehicleowner:['',Validators.required],\n      cityZipcodevehicleOwner:['',Validators.required],\n      streetNumbervehicleowner:['',Validators.required],\n      fullNameDelivery:['',Validators.required],\n      phoneNumDelivery:['',Validators.required],\n      addressType:['',Validators.required],\n      cityZipcodeDelivery:['',Validators.required],\n      streetNumberDelivery:['',Validators.required],\n      block:['',Validators.required],\n      apartmentDelivery:['',Validators.required],\n      AgreeToAll:[false,Validators.requiredTrue],\n      receiveNewsletter:[false,Validators.requiredTrue],\n      generalTerms:[false,Validators.requiredTrue]\n    })\n  }\n\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".edit_prop{\r\n    color: dodgerblue;\r\n}\r\n\r\n.email_btn_prop{\r\n    border-radius: 3rem;\r\n}\r\n\r\n.label_prop{\r\n    color: rgb(0, 53, 103);\r\n    font-weight: 700;\r\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n}\r\n.sub_label_prop{\r\n    font-size: small;\r\n}\r\nh6{\r\n    color: rgb(0, 53, 103); \r\n}\r\np{\r\n    color: rgb(80, 108, 134); \r\n\r\n}\r\ninput{\r\n    color: rgb(0, 53, 103); \r\n    border:none;\r\n    outline: no;\r\n}\r\n\r\n.card_bg{\r\n    background-color: \trgb(0, 53, 103);\r\n    border-radius: 0.5rem;\r\n}\r\n\r\n.shadow{\r\n    box-shadow: darkgray;\r\n}\r\n\r\n.font_color{\r\n    color:rgb(0, 53, 103);\r\n}\r\n",
                    "styleUrl": "./proposal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "_dataService",
                        "type": "CommonDataService"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dataService",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"d-flex justify-content-between  col-lg-9 col-md-12 mx-auto\">\n            <h4 class=\"p-2 label_prop\">Proposal</h4>\n            <div class=\"p-2\"><button class=\"btn btn-outline-primary email_btn_prop\">Send to email</button></div>\n        </div>\n       <br/>\n\n       <div class=\"card  col-lg-9 col-md-12 mx-auto\" style=\"border: none;\"> \n        <div class=\"card-body card_bg\">\n        <div class=\"row\">\n        <div class=\"col-md-1\">\n            <div><i class=\"fa fa-car fa-2x\" style=\"color:white\"></i></div>\n        </div>\n           <div class=\"col-lg-4 col-md-4 col-sm-12\">\n               <p class=\"card-text\" style=\"color: white;\">Motor Third Party Liability Policy</p>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-12 ml-auto\">\n                <p class=\"card-text\" style=\"color: white;font-weight:600;\">324,00 BGN</p>\n            </div>\n        </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-12 ml-auto\">\n            <p  class=\"card-text\" style=\"color:white;font-weight: 100;\">four payments</p>\n            </div>\n            </div>\n        </div>\n\n\n        <div class=\"col-lg-8 col-md-12 mx-auto\">\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body  border-bottom\">\n                    <p><i class=\"fa fa-check\" style=\"color:green\"></i>premium indicated are final and include contribution to the Gaurantee  and insurance fund, stickers and 2% tax on insurance payment.</p>\n                <p><i class=\"fa fa-check\" style=\"color:green\"></i>The insurance payment is calculated with included- 5% discount for insurance with  Casco I.</p>\n            <p><i class=\"fa fa-check\" style=\"color:green\"></i>Annual Technical Inspection Voucher </p>\n                </div>\n            </div>\n            <br/>\n\n            <form [formGroup]=\"summaryForm\">\n\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body border-bottom\">\n                    <label class=\"label_prop\">Instalments</label>&nbsp;&nbsp;&nbsp;\n                    <a href=\"#\" class=\"edit_prop\">Edit</a>\n                    <div class=\"row\">\n\n                <div class=\"col-md-3\">                    \n                    <div class=\"form-group\">\n                    <label class=\"font_color sub_label_prop\">First Instalment</label>\n                    <input type=\"text\" class=\"form-control\" id=\"firstInstalment\"  value={{first}}>\n                    </div>\n                    <span *ngIf=\"summaryForm.controls.firstInstalment.errors\" style=\"color: red;\">Required</span>\n                </div>\n\n                <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                <label class=\"font_color sub_label_prop\">Second Instalment</label>\n                <input type=\"text\" class=\"form-control input_prop\" formControlName=\"secondInstalment\" [value]=\"secondI\">\n                </div>\n                <span *ngIf=\"summaryForm.controls.secondInstalment.errors\" style=\"color: red;\">Required</span>\n                </div>\n\n                <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                <label class=\"font_color sub_label_prop\"> Third Instalment</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"thirdInstalment\" [value]=\"third\">\n                </div>\n                <span *ngIf=\"summaryForm.controls.thirdInstalment.errors\" style=\"color: red;\">Required</span>\n                </div>\n\n                <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                <label class=\"font_color sub_label_prop \">Fourth Instalment</label>\n                <input type=\"text\"  class=\"form-control\" formControlName=\"fourthInstalment\" [value]=\"fourth\">\n                </div>\n                <span *ngIf=\"summaryForm.controls.fourthInstalment.errors\" style=\"color: red;\">Required</span>\n                </div>\n\n            </div>\n\n                </div>\n            </div>\n            <br/>\n\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body  border-bottom\">\n                    <label class=\"label_prop\">Additional Cover</label>&nbsp;&nbsp;&nbsp;\n                    <a href=\"#\" class=\"edit_prop\">Edit</a>\n                    <div class=\"form-group\">\n                    <!-- <input type=\"text\" formControlName=\"additionalCover\" class=\"form-control label_prop\" [value]=\"\"> -->\n                    {{mtplCalculatorData[\"coversData\"].cover}}\n                </div>\n                <!-- <span *ngIf=\"summaryForm.controls.additionalCover.errors\" style=\"color: red;\">Required</span> -->\n                </div>\n            </div>\n            <br/>\n\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body  border-bottom\">\n                    <label class=\"label_prop\">Policy Dates</label>&nbsp;&nbsp;&nbsp;\n                    <a href=\"#\" class=\"edit_prop\">Edit</a>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                           <label class=\"font_color sub_label_prop\">Start Date</label><br>\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"startDate\" [value]=\"\"> -->\n                            {{mtplCalculatorData[\"policyDetailsData\"].policyDate}}\n                            </div>\n                            <!-- <span *ngIf=\"summaryForm.controls.startDate.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                        <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">End Date</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"endDate\" [value]=\"\">\n                        </div>\n                        <span *ngIf=\"summaryForm.controls.endDate.errors\" style=\"color: red;\">Required</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <br/>\n\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body  border-bottom\">\n                    <label class=\"label_prop\">Vehicle</label>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Vehicle Registration Number</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"vehicleRegistration\" [value]=\"\" > -->\n                       {{mtplCalculatorData[\"vehicleData\"].registrationNumber}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.vehicleRegistration.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Vehicle Purpose</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"vehiclePurpose\" [value]=\"\"> -->\n                        {{mtplCalculatorData[\"vehicleData\"].purpose}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.vehiclePurpose.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                        <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Vehicle Certification Number</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"certificationNumber\" [value]=\"\"> -->\n                        {{mtplCalculatorData[\"vehicleData\"].certificateNumber}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.certificationNumber.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Driven outside bulgaria for more than 60 days</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"days\" [value]=\"\"> -->\n                        {{mtplCalculatorData[\"vehicleData\"].yesNo}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.days.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                        <div class=\"card border-warning\">\n                            <div class=\"card-body font_color\">\n                                <i class=\"fa fa-pencil-square-o fa-2x\" style=\"color: orange;margin-left:-29px\"></i>\n                                Casco has an active policy for the same vehicle with different data.The change in the data will be reflacted in an. The ann will be sent to you by courier/ email or will be  provided for signing by e-signature.\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n            <br/>\n\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body border-bottom\">\n                    <label class=\"label_prop\">Insuring Party</label>&nbsp;&nbsp;&nbsp;\n                    <a href=\"#\" class=\"edit_prop\">Edit</a>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">ENG/ELK/LNCH Number</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"number\" [value]=\"\"> -->\n                        {{mtplCalculatorData[\"insuringPartyData\"].egn}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.number.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Full Name</label><br>\n                        {{mtplPolicyData[\"personalInformation\"].fullname.firstname}} {{mtplPolicyData[\"personalInformation\"].fullname.lastname}} {{mtplPolicyData[\"personalInformation\"].fullname.surname}}\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"fullName\" [value]=\"\"> -->\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.fullName.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Phone Number</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"phoneNumber\" [value]=\"\"> -->\n                        {{mtplPolicyData[\"contactInformation\"].phone}} <br>\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.phoneNumber.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Email</label><br>\n                        {{mtplCalculatorData[\"insuringPartyData\"].email}}\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"email\" [value]=\"\"> -->\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.email.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                        <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">City and zipcode</label><br>\n                        {{mtplPolicyData[\"contactInformation\"].city}}   {{mtplPolicyData[\"contactInformation\"].pincode}} \n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"cityZipcode\" [value]=\"\"> -->\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.cityZipcode.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Street & Number</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"streetNumber\" [value]=\"\"> -->\n                        {{mtplPolicyData[\"contactInformation\"].street}}   {{mtplPolicyData[\"contactInformation\"].No}} \n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.streetNumberors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Apartment</label><br>\n                        {{mtplPolicyData[\"contactInformation\"].appartment}} \n                        <!-- <input type=\"number\" class=\"form-control\" formControlName=\"apartment\" [value]=\"\"> -->\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.apartment.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <br/>\n\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body border-bottom\">\n                    <label class=\"label_prop\">Vehicle Owner</label>&nbsp;&nbsp;&nbsp;\n                    <a href=\"#\" class=\"edit_prop\">Edit</a>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                            <label class=\"font_color sub_label_prop\">EGN/ELK/LNCH Number</label><br>\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"egnnumber\" [value]=\"\"> -->\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].lnch}}\n                            </div>\n                            <!-- <span *ngIf=\"summaryForm.controls.egnnumber.errors\" style=\"color: red;\">Required</span> -->\n                            <div class=\"form-group\">\n                            <label class=\"font_color sub_label_prop\">Full Name</label><br>\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"fullnamevehicleowner\" [value]=\"\"> -->\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].fullname.firstname}}\n                            </div>\n                            <!-- <span *ngIf=\"summaryForm.controls.fullnamevehicleowner.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                            <label class=\"font_color sub_label_prop\">city & zipcode</label><br>\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"cityZipcodevehicleOwner\" [value]=\"\"> -->\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].city}}      \n                            </div>\n                            <!-- <span *ngIf=\"summaryForm.controls.cityZipcodevehicleOwner.errors\" style=\"color: red;\">Required</span> -->\n                            <div class=\"form-group\">\n                            <label class=\"font_color sub_label_prop\">street & Number</label><br>\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"streetNumbervehicleowner\" [value]=\"\"> -->\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].street}}      {{mtplPolicyData[\"vehicleOwnerInformation\"].No}}\n                            </div>\n                            <!-- <span *ngIf=\"summaryForm.controls.streetNumbervehicleowner.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <br/>\n\n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body border-bottom\">\n                    <label class=\"label_prop\">Delivery</label>&nbsp;&nbsp;&nbsp;\n                    <a href=\"#\" class=\"edit_prop\">Edit</a>\n                    <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Full Name</label><br>\n                        {{mtplPolicyData[\"deliveryInformation\"].fullName}}\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"fullNameDelivery\" [value]=\"\"> -->\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.fullNameDelivery.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Phone Number</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"phoneNumDelivery\" [value]=\"\"> -->\n                        {{mtplPolicyData[\"deliveryInformation\"].contact}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.phoneNumDelivery.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Address Type</label><br>\n                        {{mtplPolicyData[\"deliveryInformation\"].business}}\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"addressType\" [value]=\"\"> -->\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.addressType.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                        <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">City and zipcode</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"cityZipcodeDelivery\" [value]=\"\"> -->\n                        {{mtplPolicyData[\"deliveryInformation\"].city}} and {{mtplPolicyData[\"deliveryInformation\"].pincode}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.cityZipcodeDelivery.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Street & Number</label><br>\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"streetNumberDelivery\" [value]=\"\"> -->\n                        {{mtplPolicyData[\"deliveryInformation\"].street}} and {{mtplPolicyData[\"deliveryInformation\"].number}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.streetNumberDelivery.errors\" style=\"color: red;\">Required</span> -->\n                      \n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Block</label><br>\n                        <!-- <input type=\"number\" class=\"form-control\" formControlName=\"block\" [value]=\"\"> -->\n                        {{mtplPolicyData[\"deliveryInformation\"].block}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.block.errors\" style=\"color: red;\">Required</span> -->\n                        <div class=\"form-group\">\n                        <label class=\"font_color sub_label_prop\">Apartment</label><br>\n                        <!-- <input type=\"number\" class=\"form-control\" formControlName=\"apartmentDelivery\" [value]=\"\"> -->\n                        {{mtplPolicyData[\"deliveryInformation\"].appt}}\n                        </div>\n                        <!-- <span *ngIf=\"summaryForm.controls.apartmentDelivery.errors\" style=\"color: red;\">Required</span> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <br/>\n\n        \n            <div class=\"card\" style=\"border:none\">\n                <div class=\"card-body\">\n                    <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" class=\"font_color form-check-input\" formControlName=\"AgreeToAll\">\n                    <div>  Agree to all</div>\n                </div>\n                <span *ngIf=\"summaryForm.controls.AgreeToAll.errors\" style=\"color: red;\">Required</span>\n            </div>\n            </div><br/>\n            <div class=\"card\" style=\"box-shadow:2px 2px 2px gray;\">\n                <div class=\"card-body\">\n                    <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"receiveNewsletter\" style=\"color: rgb(0, 53, 103)\" > \n                    <div>I agree to receive DZI newsletter</div>\n                </div>\n                <span *ngIf=\"summaryForm.controls.receiveNewsletter.errors\" style=\"color: red;\">Required</span>\n            </div>\n            </div><br/>\n            <div class=\"card\" style=\"box-shadow: 2px 2px 2px gray;\">\n                <div class=\"card-body\">\n                    <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" style=\"color: rgb(0, 53, 103);\" class=\"form-check-input\" formControlName=\"generalTerms\"> \n                   <div>I agree to the <a href=\"#\" style=\"color:dodgerblue ;\">general terms and conditions</a></div>\n                   <span *ngIf=\"summaryForm.controls.generalTerms.errors\" style=\"color:red\">required</span>\n                </div>\n            </div>\n            </div>\n        </form><br/><br/>\n\n            <button class=\"btn btn-primary\" [disabled]=\"!summaryForm.valid\" style=\"border-radius: 3rem;\">Continue to payment</button>\n        </div>\n        \n    </div>\n</body>\n</html>"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-feefa5dab7178bc835291dd0fd29920f",
            "file": "src/app/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [
                "./stepper.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addressForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isLinear",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "personalInformation",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "status",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "checked",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "courseReg",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { CommonDataService } from '../common-data.service';\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.css']\n})\nexport class StepperComponent implements OnInit {\n  isLinear = true;\n  status= false;\n  personalInformation: FormGroup;\n  addressForm: FormGroup;\n  toggle=false\n\n  constructor(private _formBuilder: FormBuilder, private _commonData:CommonDataService) { }\n\n  ngOnInit(): void {this.personalInformation = this._formBuilder.group({\n    first: ['', [Validators.required,Validators.pattern(/^[A-z][A-z]+$/)]],\n    middle: ['', ],\n    last: ['', [Validators.required,Validators.pattern(/^[A-z][A-z]+$/)]],\n    gender: ['', Validators.required],\n    birth: ['', Validators.required],\n    email: ['', [Validators.required,Validators.pattern(/^[A-z][A-z0-9]+(@)[A-z]+(.com)$/)]],\n    SSN: ['', Validators.required]\n  });\n  \n  \n  this.addressForm = this._formBuilder.group({\n    mailingAddress: ['', Validators.required],\n    city: ['', Validators.required],\n    state: ['', Validators.required],\n    phoneNo: ['', [Validators.required,Validators.minLength(10),Validators.maxLength(10)]],\n    \n  });\n  \n  }\n  checked(event){\nthis.status=event.checked\n\n  }\n  onSubmit(){\n    console.log(this.personalInformation.value);\n    console.log(this.addressForm.value);\n    this._commonData.formData.next(this.personalInformation.value)\n    \n    \n    \n  }\n  courseReg(data) {\n    console.log(data,\"stepper\");\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-form-field {\n    margin-left: 8px;\n  }\n",
                    "styleUrl": "./stepper.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "_commonData",
                        "type": "CommonDataService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_commonData",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-horizontal-stepper labelPosition=\"bottom\" #stepper linear>\n\n  <mat-step completed={{toggle}}>\n    <ng-template matStepLabel>Policy Details</ng-template>\n    <app-policy-details (OnRegister)=\"courseReg($event)\" (OnToggle)=\"toggle=$event\"></app-policy-details>\n  </mat-step>\n    \n  <mat-step completed={{toggle}}>\n    <ng-template matStepLabel>Vehicle </ng-template>\n    <app-v-info (OnRegister)=\"courseReg($event)\" (OnToggle)=\"toggle=$event\"></app-v-info>\n    {{toggle}}\n  </mat-step>\n  \n  \n  \n  <mat-step [stepControl]=\"personalInformation\">\n      <mat-card>\n        <form [formGroup]=\"personalInformation\">\n        <ng-template matStepLabel>Enter your personal information</ng-template>\n        \n        <mat-form-field appearance=\"fill\">\n          <mat-label>First</mat-label>\n          <input matInput placeholder=\"First name\" formControlName=\"first\" required>\n          <mat-error *ngIf=\"personalInformation.controls.first.errors?.required\">Please enter the first name</mat-error>\n          <mat-error *ngIf=\"personalInformation.controls.first.errors?.pattern\">Please enter the Valid first name</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Middle (optional)</mat-label>\n          <input matInput placeholder=\"Middle name (optional)\" formControlName=\"middle\">\n        </mat-form-field><br/>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>last</mat-label>\n          <input matInput placeholder=\" Last name\" formControlName=\"last\" required>\n          <mat-error *ngIf=\"personalInformation.controls.last.errors?.required\">Please enter the last name</mat-error>\n          <mat-error *ngIf=\"personalInformation.controls.last.errors?.pattern\">Please enter the Valid last name</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Gender</mat-label>\n          <mat-select formControlName=\"gender\">\n            <mat-option value=\"Male\">Male</mat-option>\n            <mat-option value=\"Female\">Female</mat-option>\n            <mat-option value=\"Other\">Other</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"personalInformation.controls.gender.errors?.required\">Please select the gender</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Birth date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"birth\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n          <mat-error *ngIf=\"personalInformation.controls.birth.errors?.required\">Please select the birth date</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>SSN</mat-label>\n          <input matInput  formControlName=\"SSN\" required>\n          <mat-error *ngIf=\"personalInformation.controls.SSN.errors?.required\">Please select the SSN</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Id</mat-label>\n          <input matInput placeholder=\"karan@gmail.com\" formControlName=\"email\" required>\n          <mat-error *ngIf=\"personalInformation.controls.email.errors?.required\">Please enter the email id</mat-error>\n          <mat-error *ngIf=\"personalInformation.controls.email.errors?.pattern\">Please enter the Valid emailId</mat-error>\n        </mat-form-field><br/>\n  \n  \n  \n  \n        <div>\n          <button mat-raised-button  matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-card>\n      \n    </mat-step>\n    <mat-step [stepControl]=\"addressForm\" >\n      <form [formGroup]=\"addressForm\">\n        <ng-template matStepLabel>Enter your address details</ng-template>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Mailing address</mat-label>\n          <input matInput formControlName=\"mailingAddress\" placeholder=\"Ex. 1 Main St, New York, NY\" required>\n          <mat-error *ngIf=\"addressForm.controls.mailingAddress.errors?.required\">Please enter the mailing address</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>city</mat-label>\n          <input matInput formControlName=\"city\" placeholder=\"pune\" required>\n          <mat-error *ngIf=\"addressForm.controls.city.errors?.required\">Please enter the city</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>state</mat-label>\n          <input matInput formControlName=\"state\" placeholder=\"Maharastra\" required>\n          <mat-error *ngIf=\"addressForm.controls.state.errors?.required\">Please enter the state</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone no</mat-label>\n          <input matInput formControlName=\"phoneNo\" placeholder=\"7507820170\" required>\n          <mat-error *ngIf=\"addressForm.controls.phoneNo.errors?.required\">Please enter the phone no</mat-error>\n          <mat-error *ngIf=\"addressForm.controls.phoneNo.errors?.minlength \">Please enter the Valid phone no</mat-error>\n          <mat-error *ngIf=\"addressForm.controls.phoneNo.errors?.maxlength \">Please enter the Valid phone no</mat-error>\n        </mat-form-field><br>\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step>\n      <ng-template matStepLabel>Confirmation</ng-template>\n      <mat-checkbox (change)=\"checked($event)\">I agree to the Terms and Conditions\"</mat-checkbox><br><br>\n      <button mat-button color=\"primary\" (click)=\"onSubmit()\" [disabled]=\"!status\">Submit </button><br><br>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button (click)=\"stepper.reset()\">Reset</button>\n      </div>\n    </mat-step>\n  </mat-horizontal-stepper>"
        },
        {
            "name": "Tab2Component",
            "id": "component-Tab2Component-e06d62af0fafd676e7b28d8a10074d4e",
            "file": "src/app/components/tab2/tab2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab2",
            "styleUrls": [
                "./tab2.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tab2.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: './tab2.component.html',\n  styleUrls: ['./tab2.component.css']\n})\nexport class Tab2Component implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  navigate(){\n    this.router.navigate([\"tab2\"]);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "html, body {\r\n    width: 100%;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 26px;\r\n    padding: 40px 0 100px 20%;\r\n    margin-bottom: 50px;\r\n    margin-left: 200px;\r\n  }\r\n  \r\n  label, p, a, h1, div {\r\n    font-family: Roboto, sans-serif;\r\n  }\r\n  \r\n  .tab-wrap {\r\n    width: 70%;\r\n    margin-left: 15%;\r\n    position: relative;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    top: -106px;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"] {\r\n    position: absolute;\r\n    z-index: -1;\r\n    display: none;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content label {\r\n    color:rgb(34, 34, 185);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content .tab-content {\r\n    display: block;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(1):checked ~ .slide {\r\n    left: calc((100% / 6) * 0);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(2):checked ~ .slide {\r\n    left: calc((100% / 6) * 1);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(3):checked ~ .slide {\r\n    left: calc((100% / 6) * 2);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(4):checked ~ .slide {\r\n    left: calc((100% / 6) * 3);\r\n  }\r\n\r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(5):checked ~ .slide {\r\n    left: calc((100% / 6) * 4);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(6):checked ~ .slide {\r\n    left: calc((100% / 6) * 5);\r\n  }\r\n  input[type=\"radio\"][name=\"tabs\"]:first-of-type:checked ~ .slide {\r\n    left: 0;\r\n  }\r\n  \r\n  label {\r\n    cursor: pointer;\r\n    color:rgb(102, 102, 110);\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    display: -webkit-inline-box;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    -webkit-box-pack: center;\r\n        -ms-flex-pack: center;\r\n            justify-content: center;\r\n    text-align: center;\r\n    height: 56px;\r\n    -webkit-transition: color 0.2s ease;\r\n    transition: color 0.2s ease;\r\n    width: 100%;\r\n   \r\n  }\r\n  \r\n  .slide {\r\n    background:#00bcd4;\r\n    width: calc(100% /6);\r\n    height: 4px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: calc(100% - 4px);\r\n    -webkit-transition: left 0.3s ease-out;\r\n    transition: left 0.3s ease-out;\r\n  }\r\n  \r\n  .tab-label-content {\r\n    width: 100%;\r\n  }\r\n  \r\n  .tab-label-content .tab-content {\r\n    position: absolute;\r\n    top: 100px;\r\n    left: 16px;\r\n    right :16px;\r\n    line-height: 130%;\r\n    display: none;\r\n  }\r\n  \r\n  @media screen and (max-width: 800px) {\r\n    h1 {\r\n      padding: 40px 0 90px 10%;\r\n    }\r\n    .tab-wrap {\r\n      width: 80%;\r\n      margin-left: 10%;\r\n      top: -106px;\r\n    }\r\n  }\r\n\r\n  ",
                    "styleUrl": "./tab2.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>MTPL Calculator</h1>\n<div class=\"tab-wrap\">\n  \n    <input type=\"radio\" name=\"tabs\" id=\"tab1\" checked>\n    <div class=\"tab-label-content\" id=\"tab1-content\">\n      <label for=\"tab1\">Vehicle</label>\n      \n        \n\n      <div class=\"tab-content\">\n        <!-- TAB 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis laoreet eget lectus eu congue. Nam finibus urna eget nisl aliquam, in dictum ligula feugiat. Donec mollis ligula purus, et interdum velit bibendum eget. Aliquam magna diam, tristique eu libero nec, sagittis finibus sapien. Cras a ex ultricies, faucibus elit sagittis, maximus nisi. Donec quis arcu sapien. Aenean risus nibh, varius sed porttitor a, ornare nec leo. Sed vitae lacus in ipsum varius sagittis. Ut in quam cursus, ullamcorper sapien posuere, laoreet elit. Suspendisse interdum, risus ut ultricies scelerisque, nibh est commodo leo, sed tristique nisl odio et turpis. Fusce pellentesque nunc nec arcu feugiat accumsan. Praesent mauris sem, eleifend sit amet tortor in, cursus vehicula arcu. Curabitur convallis sit amet nunc ac feugiat. Sed at risus id diam porta pretium id vel felis. Donec nec dui id nisl hendrerit laoreet eu id odio. -->\n        <app-v-info></app-v-info>\n      </div>\n    </div>\n     \n    <input type=\"radio\" name=\"tabs\" id=\"tab2\">\n    <div class=\"tab-label-content\" id=\"tab2-content\">\n      <label for=\"tab2\">Insuring Party</label>\n      <div class=\"tab-content\">\n        <!-- TAB 2 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie. -->\n        <app-insuring-party></app-insuring-party>\n      </div>\n    </div>\n    \n    <input type=\"radio\" name=\"tabs\" id=\"tab3\">\n    <div class=\"tab-label-content\" id=\"tab3-content\">\n      <label for=\"tab3\">Policy Details</label>\n      <div class=\"tab-content\">\n        <!-- TAB 3 - Donec vulputate ante ac ligula vestibulum, id mollis diam commodo. Integer at consequat magna. Sed elit sem, dictum nec porttitor ac, ultrices id enim. Morbi semper eros a enim malesuada, eu finibus erat dictum. Ut vitae orci a odio sagittis malesuada. Cras volutpat vel lorem in tempor. Duis ultricies lectus sit amet tellus vehicula faucibus. Etiam sed leo ac erat tempor feugiat at quis ipsum. Mauris pellentesque nisl lorem, ac finibus sapien sagittis vel. Donec et lobortis est. Vestibulum dignissim ligula nec erat interdum, quis sollicitudin metus pretium. Vestibulum quis dui sapien. Proin commodo justo ac orci elementum molestie. Aliquam mattis orci vitae volutpat commodo. -->\n        <app-policy-details></app-policy-details>\n      </div>\n    </div>\n  \n     <input type=\"radio\" name=\"tabs\" id=\"tab4\">\n     <div class=\"tab-label-content\" id=\"tab4-content\">\n      <label for=\"tab4\">Instalments</label>\n      <div class=\"tab-content\">TAB 4 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\n    </div>\n\n    <input type=\"radio\" name=\"tabs\" id=\"tab5\">\n     <div class=\"tab-label-content\" id=\"tab5-content\">\n      <label for=\"tab5\">Covers</label>\n      <div class=\"tab-content\">\n        <app-additional-covers></app-additional-covers>\n        <!-- TAB 5 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie. -->\n      </div>\n    </div>\n     \n\n    <input type=\"radio\" name=\"tabs\" id=\"tab6\">\n     <div class=\"tab-label-content\" id=\"tab6-content\">\n      <label for=\"tab6\">Summary</label>\n      <div class=\"tab-content\">\n        <input name=\"navigate\" id=\"navigate\" class=\"btn btn-primary\" type=\"button\" (click)=\"navigate()\" value=\"next\">\n        \n        TAB 6 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\n  \n    </div>\n    \n    <div class=\"slide\"></div>\n  \n</div>\n\n\n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-6a4cea0d7ba572f6dc594c242474f0c7",
            "file": "src/app/tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [
                "./tab.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "changeTab",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "policyTabToggle",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.css']\n})\nexport class TabComponent implements OnInit {\n  activeTab = 0;\n  policyTabToggle=true\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeTab=(data)=>{\n    this.policyTabToggle=false\n    this.activeTab=data\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tab.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- hello {{activeTab}} <button (click)=\"policyTabToggle=!policyTabToggle\">toggle</button> -->\n<mat-tab-group mat-align-tabs=\"center\" [(selectedIndex)]=\"activeTab\">\n    <mat-tab label=\"MTPL Calculator\">\n        <app-mtpl-calculator (NextTabSwitch)=\"changeTab($event)\"></app-mtpl-calculator>\n    </mat-tab>\n    <mat-tab label=\"Purchase MTPL Policy\" [disabled]=\"policyTabToggle\"> \n        <app-mtpl-policy></app-mtpl-policy>\n    </mat-tab>\n    \n</mat-tab-group>\n"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-c117ac11b93d359eeaad36b391b0189e",
            "file": "src/app/components/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [
                "./tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "html, body {\r\n    width: 100%;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 26px;\r\n    padding: 40px 0 100px 20%;\r\n    margin-bottom: 50px;\r\n    margin-left: 200px;\r\n  }\r\n  \r\n  label, p, a, h1, div {\r\n    font-family: Roboto, sans-serif;\r\n  }\r\n  \r\n  .tab-wrap {\r\n    width: 70%;\r\n    margin-left: 15%;\r\n    position: relative;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    top: -106px;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"] {\r\n    position: absolute;\r\n    z-index: -1;\r\n    display: none;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content label {\r\n    color:rgb(34, 34, 185);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content .tab-content {\r\n    display: block;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(1):checked ~ .slide {\r\n    left: calc((100% / 6) * 0);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(2):checked ~ .slide {\r\n    left: calc((100% / 6) * 1);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(3):checked ~ .slide {\r\n    left: calc((100% / 6) * 2);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(4):checked ~ .slide {\r\n    left: calc((100% / 6) * 3);\r\n  }\r\n\r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(5):checked ~ .slide {\r\n    left: calc((100% / 6) * 4);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(6):checked ~ .slide {\r\n    left: calc((100% / 6) * 5);\r\n  }\r\n  input[type=\"radio\"][name=\"tabs\"]:first-of-type:checked ~ .slide {\r\n    left: 0;\r\n  }\r\n  \r\n  label {\r\n    cursor: pointer;\r\n    color:rgb(102, 102, 110);\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    display: -webkit-inline-box;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    -webkit-box-pack: center;\r\n        -ms-flex-pack: center;\r\n            justify-content: center;\r\n    text-align: center;\r\n    height: 56px;\r\n    -webkit-transition: color 0.2s ease;\r\n    transition: color 0.2s ease;\r\n    width: 100%;\r\n  }\r\n  \r\n  .slide {\r\n    background:#00bcd4;\r\n    width: calc(100% /6);\r\n    height: 4px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: calc(100% - 4px);\r\n    -webkit-transition: left 0.3s ease-out;\r\n    transition: left 0.3s ease-out;\r\n  }\r\n  \r\n  .tab-label-content {\r\n    width: 100%;\r\n  }\r\n  \r\n  .tab-label-content .tab-content {\r\n    position: absolute;\r\n    top: 100px;\r\n    left: 16px;\r\n    line-height: 130%;\r\n    display: none;\r\n  }\r\n  \r\n  @media screen and (max-width: 800px) {\r\n    h1 {\r\n      padding: 40px 0 90px 10%;\r\n    }\r\n    .tab-wrap {\r\n      width: 80%;\r\n      margin-left: 10%;\r\n      top: -106px;\r\n    }\r\n  }\r\n\r\n  ",
                    "styleUrl": "./tabs.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Purchase MTPL Policy</h1>\n<div class=\"tab-wrap\">\n  \n    <input type=\"radio\" name=\"tabs\" id=\"tab1\" checked>\n    <div class=\"tab-label-content\" id=\"tab1-content\">\n      <label for=\"tab1\">Personal Details</label>\n      <div class=\"tab-content\">TAB 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis laoreet eget lectus eu congue. Nam finibus urna eget nisl aliquam, in dictum ligula feugiat. Donec mollis ligula purus, et interdum velit bibendum eget. Aliquam magna diam, tristique eu libero nec, sagittis finibus sapien. Cras a ex ultricies, faucibus elit sagittis, maximus nisi. Donec quis arcu sapien. Aenean risus nibh, varius sed porttitor a, ornare nec leo. Sed vitae lacus in ipsum varius sagittis. Ut in quam cursus, ullamcorper sapien posuere, laoreet elit. Suspendisse interdum, risus ut ultricies scelerisque, nibh est commodo leo, sed tristique nisl odio et turpis. Fusce pellentesque nunc nec arcu feugiat accumsan. Praesent mauris sem, eleifend sit amet tortor in, cursus vehicula arcu. Curabitur convallis sit amet nunc ac feugiat. Sed at risus id diam porta pretium id vel felis. Donec nec dui id nisl hendrerit laoreet eu id odio.</div>\n    </div>\n     \n    <input type=\"radio\" name=\"tabs\" id=\"tab2\">\n    <div class=\"tab-label-content\" id=\"tab2-content\">\n      <label for=\"tab2\" class=\"head\">Contact details</label>\n      <div class=\"tab-content\">TAB 2 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\n    </div>\n    \n    <input type=\"radio\" name=\"tabs\" id=\"tab3\">\n    <div class=\"tab-label-content\" id=\"tab3-content\">\n      <label for=\"tab3\" class=\"head\">Vehicle Owner</label>\n      <div class=\"tab-content\">TAB 3 - Donec vulputate ante ac ligula vestibulum, id mollis diam commodo. Integer at consequat magna. Sed elit sem, dictum nec porttitor ac, ultrices id enim. Morbi semper eros a enim malesuada, eu finibus erat dictum. Ut vitae orci a odio sagittis malesuada. Cras volutpat vel lorem in tempor. Duis ultricies lectus sit amet tellus vehicula faucibus. Etiam sed leo ac erat tempor feugiat at quis ipsum. Mauris pellentesque nisl lorem, ac finibus sapien sagittis vel. Donec et lobortis est. Vestibulum dignissim ligula nec erat interdum, quis sollicitudin metus pretium. Vestibulum quis dui sapien. Proin commodo justo ac orci elementum molestie. Aliquam mattis orci vitae volutpat commodo.</div>\n    </div>\n  \n     <input type=\"radio\" name=\"tabs\" id=\"tab4\">\n     <div class=\"tab-label-content\" id=\"tab4-content\">\n      <label for=\"tab4\" class=\"head\">Delivery</label>\n      <div class=\"tab-content\">\n        <app-delivery></app-delivery>\n      </div>\n    </div>\n\n    <input type=\"radio\" name=\"tabs\" id=\"tab5\">\n     <div class=\"tab-label-content\" id=\"tab5-content\">\n      <label for=\"tab5\" class=\"head2\">Summary</label>\n      <div class=\"tab-content\">TAB 5 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\n    </div>\n\n    <input type=\"radio\" name=\"tabs\" id=\"tab6\">\n     <div class=\"tab-label-content\" id=\"tab6-content\">\n      <label for=\"tab6\" class=\"head\">Payment</label>\n      <div class=\"tab-content\">TAB 6 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\n    </div>\n    \n    <div class=\"slide\"></div>\n  \n</div>\n\n\n"
        },
        {
            "name": "VehicleOwnerComponent",
            "id": "component-VehicleOwnerComponent-52b93294703b0c7802bd0e99cf581625",
            "file": "src/app/components/vehicle-owner/vehicle-owner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vehicle-owner",
            "styleUrls": [
                "./vehicle-owner.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./vehicle-owner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "button",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "citizens",
                    "defaultValue": "['Indian', 'American', 'African']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Details",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectedLink",
                    "defaultValue": "\"Yes\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "toggle",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                }
            ],
            "methodsClass": [
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "setradio",
                    "args": [
                        {
                            "name": "e",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-vehicle-owner',\n  templateUrl: './vehicle-owner.component.html',\n  styleUrls: ['./vehicle-owner.component.css']\n})\nexport class VehicleOwnerComponent implements OnInit {\n  @Output() OnRegister = new EventEmitter()\n  @Output() OnToggle = new EventEmitter()\n  Details: FormGroup;\n  citizens = ['Indian', 'American', 'African'];\n  constructor(private formBuilder: FormBuilder) { }\n\n  // success() {\n  //   console.log(this.Details.value);\n  // }\n\n\n  ngOnInit(): void {\n    this.Details = this.formBuilder.group({\n      lnch: ['', Validators.required],\n      fullname: this.formBuilder.group({\n        firstname: ['', Validators.required],\n        lastname: ['', Validators.required],\n        surname: []\n      }),\n      fullnameeng: this.formBuilder.group({\n        firstnameeng: ['', Validators.required],\n        lastnameeng: ['', Validators.required],\n        surnameeng: []\n      }),\n      citizen: ['', Validators.required],\n      birth: ['', Validators.required],\n      city: ['', Validators.required],\n      street: ['', Validators.required],\n      No: ['', Validators.required],\n      block:[''],\n      entrance:[''],\n      appartment:[''],\n    });\n  }\n\n  private selectedLink: string = \"Yes\";\n\n  setradio(e: string): void {\n\n    this.selectedLink = e;\n\n  }\n\n  isSelected(name: string): boolean {\n\n    if (!this.selectedLink) {\n      return false;\n    }\n\n    return (this.selectedLink === name);\n  }\n\n  submit=()=>{\n    console.log(this.Details.value, \"vehicle owner\");\n    this.OnRegister.emit(this.Details.value);\n  }\n  change=()=>{\n    if(this.Details.valid){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(this.Details.value);\n    }else{\n      this.OnToggle.emit(false)\n    }\n  }\n  button=false\n  toggle=(data)=>{\n    if(data){\n      this.OnToggle.emit(true)\n      this.OnRegister.emit(\"Yes\");\n      this.button=true\n    }else{\n      this.change()\n    }\n  }\n  // next=()=>{\n  //   console.log(this.selectedLink, \"vehicle owner\");\n  //   this.OnRegister.emit(10);\n  // }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.form-control{\n    width:180px\n}\n\n\nh1{\n    margin-left: 1px;\n    margin-bottom: 20px;\n    color: darkblue;\n}\nlabel{\n    color: darkgray;\n    font-family: Arial, Helvetica, sans-serif;\n}\n.col-sm-4{\n    padding-left: 205px;\n   \n}\nhr{\n    width:50%;\n    text-align:left;\n    margin-left:0;\n}\n.panel{\n    border-color:yellow;\n    width: 555px;\n}\n.error{\n    color: red;\n}\n.btn{\n    border-radius: 50px;\n    min-width: 100px;\n  }\n@media screen and (max-width: 800px) {\n    .col-sm-4{\n        padding-left:13px;\n        \n\n    }\n    .panel{\n        width: 177px;;\n    }\n\n}\n\n.col-sm-2\n{\n   width:200px; \n}\n\n",
                    "styleUrl": "./vehicle-owner.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Vehicle Owner</h1>\n\n<div class=\"container\"> \n    <div class=\"row\">\n    <label>Are u the owner of the vehicle</label>\n      <label class=\"radio-inline\">\n        <input type=\"radio\" name=\"gender\" id=\"Radios1\" value=\"Yes\" (click)=\"setradio('Yes')\" (change)=\"toggle(true)\">\n        Yes\n      </label>\n      \n      <label class=\"radio-inline\">\n        <input type=\"radio\" name=\"gender\" id=\"Radios2\" value=\"No\" (click)=\"setradio('No')\" (change)=\"toggle(false)\">\n        No\n      </label>\n    </div>\n</div> \n<div *ngIf=\"isSelected('Yes')\">  \n    <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!button\" matStepperNext>Next</button>\n</div>\n\n<div *ngIf=\"isSelected('No')\">\n    <form [formGroup]=\"Details\" (ngSubmit)=\"submit()\">\n    <h2>Vehicle Owner Details</h2>\n\n    <div class=\"form-group row\">\n        <label for=\"lnch\" class=\"col-sm-2 col-form-label\">Enter your Number</label>\n        <div class=\"col-sm-4\">\n        <input type=\"text\" class=\"form-control\" id=\"lnch\" placeholder=\"Enter your Number\" formControlName=\"lnch\"  name=\"lnch\" (change)=\"change()\">\n        <div *ngIf=\"Details.controls.lnch.hasError('required') &&(Details.controls.lnch.dirty || Details.controls.lnch.touched)\" class=\"error\">Please enter the number</div>\n        </div>\n    </div>\n    <hr>\n    <div formGroupName=\"fullname\">\n        <label class=\"\">Full Name</label><br>\n      <div class=\"form-group row\">\n        \n        <div class=\"col-sm-2\">\n        <input type=\"text\" class=\"form-control\" id=\"firstname\" placeholder=\"Enter firstname\" formControlName=\"firstname\"  name=\"firstname\" (change)=\"change()\">\n        <div *ngIf=\"Details.get('fullname').get('firstname').hasError('required') &&(Details.get('fullname').get('firstname').dirty || Details.get('fullname').get('firstname').touched)\" class=\"error\">Please enter your first name</div>\n        </div>\n        <div class=\"col-sm-2\">\n        <input type=\"text\" class=\"form-control\" id=\"lastname\" placeholder=\"Enter lastname\" formControlName=\"lastname\"  name=\"lastname\" (change)=\"change()\">\n        <div *ngIf=\"Details.get('fullname').get('lastname').hasError('required') &&(Details.get('fullname').get('lastname').dirty || Details.get('fullname').get('lastname').touched)\" class=\"error\">Please enter your lastname</div>\n        </div>\n        <div class=\"col-sm-2\">\n        <input type=\"text\" class=\"form-control\" id=\"surname\" placeholder=\"Enter surname\" formControlName=\"surname\"  name=\"suname\" (change)=\"change()\">\n        </div>\n      </div>\n     </div>\n     <hr>\n     <div formGroupName=\"fullnameeng\">\n        <label>Full Name in English</label><br>\n        <div class=\"form-group row\">\n            <div class=\"col-sm-2\">\n          <input type=\"text\" class=\"form-control\" id=\"firstnameeng\" placeholder=\"Enter firstname\" formControlName=\"firstnameeng\"  name=\"firstnameeng\" (change)=\"change()\">\n          <div *ngIf=\"Details.get('fullnameeng').get('firstnameeng').hasError('required') &&(Details.get('fullnameeng').get('firstnameeng').dirty || Details.get('fullnameeng').get('firstnameeng').touched)\" class=\"error\">Please enter your first name</div>\n          </div>\n          <div class=\"col-sm-2\">\n          <input type=\"text\" class=\"form-control\" id=\"lastnameeng\" placeholder=\"Enter lastname\" formControlName=\"lastnameeng\"  name=\"lastnameeng\" (change)=\"change()\">\n          <div *ngIf=\"Details.get('fullnameeng').get('lastnameeng').hasError('required') &&(Details.get('fullnameeng').get('lastnameeng').dirty || Details.get('fullnameeng').get('lastnameeng').touched)\" class=\"error\">Please enter your lastname</div>\n          </div>\n          <div class=\"col-sm-2\">\n          <input type=\"text\" class=\"form-control\" id=\"surnameeng\" placeholder=\"Enter surname\" formControlName=\"surnameeng\"  name=\"sunameeng\" (change)=\"change()\">\n        </div>\n        </div>\n       </div>\n    \n       <div class=\"panel panel-default\">\n        <div class=\"panel-body\">Please compare data in latin with data in vehicle registration certificate\n            or identity document.Data will be used for printout of Green Card Certificate.\n        </div>\n      </div>\n\n    <div class=\"form-group row\">\n        <label for=\"citizen\" class=\"col-sm-2 col-form-label\">Citizenship</label>\n        <div class=\"col-sm-4\">\n        <select class=\"form-control\" id=\"citizen\" formControlName=\"citizen\" name=\"citizen\" (change)=\"change()\">\n          <option *ngFor=\"let c of citizens\" [value]=\"c\">{{c}}</option>\n        </select>\n        <div *ngIf=\"Details.controls.citizen.hasError('required') &&(Details.controls.citizen.dirty || Details.controls.citizen.touched)\" class=\"error\">Please select your Citizenship</div>\n        </div>\n      </div>\n    <hr>\n    <div class=\"form-group row\">\n        <label for=\"birth\" class=\"col-sm-2 col-form-label\">Birth Date</label>\n        <div class=\"col-sm-4\">\n        <input type=\"date\" class=\"form-control\"  id=\"birth\" placeholder=\"Enter Birth date\" formControlName=\"birth\"  name=\"birth\" (change)=\"change()\">\n        <div *ngIf=\"Details.controls.birth.hasError('required') &&(Details.controls.birth.dirty || Details.controls.birth.touched)\" class=\"error\">Please select your birth date </div>\n        </div>\n    </div>\n    <div class=\"h-divider\">\n    </div>\n\n    <h2>\n        Contact Information\n    </h2>\n    \n\n    <div class=\"form-group row\">\n        <div class=\"col-lg-2\">\n            <label for=\"city\" class=\"col-sm-2 col-form-label\">City</label>\n        </div>\n       \n        <div class=\"col-sm-2\">\n            <select class=\"form-control\" id=\"sel1\" formControlName=\"city\"  name=\"city\" (change)=\"change()\">\n                <option value=\"Hyd\">Hyderabad</option>\n                <option value=\"Mum\">Mumbai</option>\n                <option value=\"Pune\">Pune</option>\n                <option value=\"Chenai\">Chennai</option>\n                <option value=\"Banglore\">Banglore</option>\n                <option value=\"Goa\">Goa</option>\n                <option value=\"Maharashtra\">Maharashtra</option>\n                \n            </select>\n            <div *ngIf=\"Details.controls.city.hasError('required') &&(Details.controls.city.dirty || Details.controls.city.touched)\" class=\"error\">Please select your City</div>\n        </div>\n        <div class=\"col-sm-2\">\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"1000\" (change)=\"change()\">\n            </div>\n       </div>\n    </div>\n    \n\n    <div class=\"form-group row\">\n        <div class=\"col-lg-2\">\n            <label for=\"s&n\" class=\"col-sm-2 col-form-label\">Street & Number </label>\n        </div>\n        \n        <div class=\"col-sm-2\">\n            <input type=\"text\" class=\"form-control\"  formControlName=\"street\" (change)=\"change()\">\n        </div>\n        <div class=\"col-sm-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"No\" (change)=\"change()\">\n        </div>\n\n    </div>\n    <div class=\"form-group row\">\n        <div class=\"col-lg-2\">\n        <label for=\"be&a\">Block Entrance&Apartment </label>\n        </div>\n        <div class=\"col-xs-1\">\n            \n            <input type=\"text\" class=\"form-control\" style=\"width:120px\" (change)=\"change()\" formControlName=\"block\">\n\n        </div>\n        <div class=\"col-xs-1\">\n            <input type=\"text\" class=\"form-control\" style=\"width:120px\" (change)=\"change()\" formControlName=\"entrance\">\n        </div>\n        <div class=\"col-xs-1\">\n            <input type=\"text\" class=\"form-control\" style=\"width:120px\" (change)=\"change()\" formControlName=\"appartment\">\n        </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary btn-lg\" [disabled]=\"!Details.valid\" matStepperNext>Next</button>\n    </form>\n   \n</div>\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "name": "VInfoComponent",
            "id": "component-VInfoComponent-ef693a5d773f13f11682c442de5954a7",
            "file": "src/app/components/v-info/v-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-v-info",
            "styleUrls": [
                "./v-info.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./v-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "vehicleInfoForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output,EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-v-info',\n  templateUrl: './v-info.component.html',\n  styleUrls: ['./v-info.component.css']\n})\nexport class VInfoComponent implements OnInit {\n  @Output() OnRegister= new EventEmitter()\n  @Output() OnToggle=new EventEmitter()\n vehicleInfoForm:FormGroup;\n  constructor(private router: Router, private formBuilder:FormBuilder) { } \n\n  ngOnInit(): void {\n    this.vehicleInfoForm=this.formBuilder.group({\n      registrationNumber:['',[Validators.required,Validators.minLength(8),Validators.maxLength(8)]],\n      certificateNumber:['',[Validators.required,Validators.minLength(9),Validators.maxLength(9)]],\n      purpose:['',Validators.required],\n      yesNo:['Yes',Validators.required]\n    })}\n    submit=() => {\n      //this.router.navigate(['./insuring-party.component']);\n      console.log(this.vehicleInfoForm.value,\"vehicle Info\");\n      // this.OnToggle.emit(true)\n      this.OnRegister.emit(this.vehicleInfoForm.value);\n      // setTimeout(this.OnToggle.emit(true),)\n\n    }\n    change=()=>{\n      \n      if(this.vehicleInfoForm.valid){\n        this.OnToggle.emit(true)\n        this.OnRegister.emit(this.vehicleInfoForm.value);\n      }else{\n        this.OnToggle.emit(false)\n        // this.OnRegister.emit(this.vehicleInfoForm.value);\n      }\n    }\n\n    get formsControl(){\n      return this.vehicleInfoForm.controls;\n    }\n  }\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "form { \n    margin: 0  auto; \n    widows: 500px;;\n    }\n    ",
                    "styleUrl": "./v-info.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formsControl": {
                    "name": "formsControl",
                    "getSignature": {
                        "name": "formsControl",
                        "type": "",
                        "returnType": "",
                        "line": 43
                    }
                }
            },
            "templateData": "<h1 class=\"display-1\"\n    style=\"color:darkblue; font-size: 200%;font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\">\n    <b>Vehicle Information</b></h1>\n<form [formGroup]=\"vehicleInfoForm\">\n    <div class=\"form-row\">\n        <div class=\"col-9\">\n            Vehicle Registration Number\n        </div>\n        <div class=\"col-3\">\n            <input class=\"form-control\" type=\"text\" placeholder=\"XX0000XX\" formControlName=\"registrationNumber\"\n                (change)=\"change()\">\n            <div class=\"error\"\n                *ngIf=\"formsControl.registrationNumber.touched && formsControl.registrationNumber.errors\">\n                <div *ngIf=\"formsControl.registrationNumber.errors.required\">Vehicle Registartion Number is required\n                </div>\n                <div\n                    *ngIf=\"formsControl.registrationNumber.errors.minlength || formsControl.registrationNumber.errors.maxlength\">\n                    Vehicle Registartion Number Should be 8 characters </div>\n            </div>\n        </div>\n\n    </div>\n    <hr>\n\n    <div class=\"form-row\">\n        <div class=\"col-9\">\n            Vehicle Certificate Number <br>\n            <a href=\"\"><u>Where can I find this number?</u></a>\n        </div>\n        <div class=\"col-3\">\n            <input class=\"form-control\" type=\"text\" placeholder=\"000000000\" formControlName=\"certificateNumber\"\n                (change)=\"change()\">\n            <div class=\"error\" *ngIf=\"formsControl.certificateNumber.touched && formsControl.certificateNumber.errors\">\n                <div *ngIf=\"formsControl.certificateNumber.errors.required\">Vehicle Certificate Number is required\n                </div>\n                <div\n                    *ngIf=\"formsControl.certificateNumber.errors.minlength || formsControl.certificateNumber.errors.maxlength\">\n                    Vehicle Certificate Number Should be 9 characters </div>\n            </div>\n        </div>\n    </div>\n    <hr>\n\n    <div class=\"form-row\">\n        <div class=\"col-8\">\n            What purpose does this vehicle serve?\n        </div>\n        <div class=\"col-4\">\n            <select formControlName=\"purpose\" class=\"form-control\" (change)=\"change()\">\n                <option selected disabled value=\"\">--SELECT--</option>\n                <option value=\"personal\">Personal Use</option>\n                <option value=\"public\">Public Use</option>\n            </select>\n            <div class=\"error\" *ngIf=\"formsControl.purpose.touched && formsControl.purpose.errors\">\n                <div *ngIf=\"formsControl.purpose.errors.required\">Please select what purpose does this vehicle serve\n                </div>\n            </div>\n        </div>\n    </div>\n    <hr>\n\n    <div class=\"form-row\">\n        <div class=\"col-9\">\n            Are you Driving outside Bulgarian territory with this vehicle for more than 60 days?\n        </div>\n        <div class=\"col-3\">\n            <input type=\"radio\" name=\"yesNo\" (change)=\"change()\" formControlName=\"yesNo\" value=\"Yes\">Yes &nbsp;&nbsp;\n            <input type=\"radio\" name=\"yesNo\" (change)=\"change()\" formControlName=\"yesNo\" value=\"No\">No\n        </div>\n    </div>\n    <hr>\n\n</form><br>\n\n<button class=\"btn btn-primary rounded-pill\" (click)=\"submit()\" matStepperNext\n    [disabled]=\"!vehicleInfoForm.valid\">Next</button>\n\n<!-- {{vehicleInfoForm.value | json}} -->"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdditionalCoversComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ContactComponent"
                        },
                        {
                            "name": "DeliveryComponent"
                        },
                        {
                            "name": "InstallmentComponent"
                        },
                        {
                            "name": "InsuringPartyComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "MTPLCalculatorComponent"
                        },
                        {
                            "name": "MTPLPolicyComponent"
                        },
                        {
                            "name": "PaymentComponent"
                        },
                        {
                            "name": "PersonalComponent"
                        },
                        {
                            "name": "PolicyDetailsComponent"
                        },
                        {
                            "name": "ProposalComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "Tab2Component"
                        },
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabsComponent"
                        },
                        {
                            "name": "VInfoComponent"
                        },
                        {
                            "name": "VehicleOwnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: LoginComponent,\n  props: {\n    \n  }\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/login.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: LoginComponent,\n  props: {\n    \n  }\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "form",
                        "component": "Tab2Component"
                    },
                    {
                        "path": "signIn",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "tab2",
                        "component": "TabsComponent"
                    },
                    {
                        "path": "tab",
                        "component": "TabComponent"
                    },
                    {
                        "path": "**",
                        "redirectTo": "/signIn",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/common-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommonDataService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/additional-covers/additional-covers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdditionalCoversComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/contact/contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/delivery/delivery.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeliveryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/installment/installment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InstallmentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/insuring-party/insuring-party.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InsuringPartyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mtpl-calculator/mtpl-calculator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MTPLCalculatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mtpl-policy/mtpl-policy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MTPLPolicyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/payment/payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/personal/personal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/policy-details/policy-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PolicyDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/proposal/proposal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProposalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab2/tab2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab2Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/v-info/v-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/vehicle-owner/vehicle-owner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleOwnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}